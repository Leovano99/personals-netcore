// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VDI.Demo.EntityFrameworkCore;

namespace VDI.Demo.Migrations.NewCommDb
{
    [DbContext(typeof(NewCommDbContext))]
    [Migration("20180102100814_initial_create_newcomm")]
    partial class initial_create_newcomm
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VDI.Demo.NewCommDB.LK_CommType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("commTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("commTypeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("LK_CommType");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.LK_PointType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<string>("pointTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("pointTypeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("LK_PointType");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.LK_Upline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<int>("schemaID");

                    b.Property<short>("uplineNo");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("LK_Upline");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_BobotComm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("clusterID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<double>("pctBobot");

                    b.Property<int>("projectID");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_BobotComm");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_CommPct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<byte>("asUplineNo");

                    b.Property<double>("commPctHold");

                    b.Property<double?>("commPctPaid");

                    b.Property<int>("commTypeID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<decimal>("maxAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("minAmt")
                        .HasColumnType("money");

                    b.Property<decimal?>("nominal")
                        .HasColumnType("money");

                    b.Property<int>("schemaID");

                    b.Property<int>("statusMemberID");

                    b.Property<DateTime>("validDate");

                    b.HasKey("Id");

                    b.HasIndex("commTypeID");

                    b.HasIndex("schemaID");

                    b.HasIndex("statusMemberID");

                    b.ToTable("MS_CommPct");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_Developer_Schema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bankAccountName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("devCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("devName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<int>("propertyID");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("propertyID");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_Developer_Schema");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_Flag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("flagCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("flagDesc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_Flag");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupCommPct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<byte>("asUplineNo");

                    b.Property<double>("commPctHold");

                    b.Property<double?>("commPctPaid");

                    b.Property<int>("commTypeID");

                    b.Property<int>("entityID");

                    b.Property<int>("groupSchemaID");

                    b.Property<bool>("isComplete");

                    b.Property<decimal>("maxAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("minAmt")
                        .HasColumnType("money");

                    b.Property<decimal?>("nominal")
                        .HasColumnType("money");

                    b.Property<int>("statusMemberID");

                    b.Property<DateTime>("validDate");

                    b.HasKey("Id");

                    b.HasIndex("commTypeID");

                    b.HasIndex("groupSchemaID");

                    b.HasIndex("statusMemberID");

                    b.ToTable("MS_GroupCommPct");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupCommPctNonStd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<byte>("asUplineNo");

                    b.Property<double>("commPctHold");

                    b.Property<double?>("commPctPaid");

                    b.Property<int>("commTypeID");

                    b.Property<int>("entityID");

                    b.Property<int>("groupSchemaID");

                    b.Property<bool>("isComplete");

                    b.Property<decimal>("maxAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("minAmt")
                        .HasColumnType("money");

                    b.Property<decimal?>("nominal")
                        .HasColumnType("money");

                    b.Property<int>("statusMemberID");

                    b.Property<DateTime>("validDate");

                    b.HasKey("Id");

                    b.HasIndex("commTypeID");

                    b.HasIndex("groupSchemaID");

                    b.HasIndex("statusMemberID");

                    b.ToTable("MS_GroupCommPctNonStd");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("clusterID");

                    b.Property<string>("documentGrouping");

                    b.Property<int>("entityID");

                    b.Property<string>("groupSchemaCode")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("groupSchemaName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<bool>("isStandard");

                    b.Property<int>("projectID");

                    b.Property<int>("schemaID");

                    b.Property<DateTime>("validFrom");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_GroupSchema");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupSchemaRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<int>("groupSchemaID");

                    b.Property<bool>("isComplete");

                    b.Property<double>("orPctPaid");

                    b.Property<double>("pctPaid");

                    b.Property<string>("reqDesc")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<byte>("reqNo");

                    b.HasKey("Id");

                    b.HasIndex("groupSchemaID");

                    b.ToTable("MS_GroupSchemaRequirement");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_ManagementPct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bankAccountName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<double>("managementPct");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_ManagementPct");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_PointPct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<byte>("asUplineNo");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<decimal>("pointKonvert");

                    b.Property<double>("pointPct");

                    b.Property<int>("pointTypeID");

                    b.Property<int>("schemaID");

                    b.Property<int>("statusMemberID");

                    b.HasKey("Id");

                    b.HasIndex("pointTypeID");

                    b.HasIndex("schemaID");

                    b.HasIndex("statusMemberID");

                    b.ToTable("MS_PointPct");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_PPhRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("TAX_CODE")
                        .HasMaxLength(15);

                    b.Property<string>("TAX_CODE_NON_NPWP")
                        .HasMaxLength(15);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<decimal>("pphRangeHighBound");

                    b.Property<double>("pphRangePct");

                    b.Property<string>("pphRangePct_NON_NPWP")
                        .HasMaxLength(15);

                    b.Property<int>("pphYear");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_PPhRange");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_PPhRangeIns", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("TAX_CODE")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isComplete");

                    b.Property<double>("pphRangePct");

                    b.Property<int>("schemaID");

                    b.Property<DateTime>("validDate");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_PPhRangeIns");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<string>("propCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("propDesc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("propName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_Property");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_Schema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("accACDPeriod");

                    b.Property<string>("accACDPeriodType")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<int>("accCDPeriod");

                    b.Property<string>("accCDPeriodType")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<int>("accPeriod");

                    b.Property<string>("accPeriodType")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<double?>("budgetPct");

                    b.Property<string>("digitMemberCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("document");

                    b.Property<int>("dueDateComm");

                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<int>("entityID");

                    b.Property<bool>("isACDGetComm");

                    b.Property<bool>("isAcc");

                    b.Property<bool>("isAccACD");

                    b.Property<bool>("isAccCD");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isAutomaticMemberStatus");

                    b.Property<bool>("isBudget");

                    b.Property<bool>("isCDGetComm");

                    b.Property<bool>("isCapacity");

                    b.Property<bool>("isClub")
                        .HasColumnName("isClub$");

                    b.Property<bool>("isCommHold");

                    b.Property<bool>("isComplete");

                    b.Property<bool>("isFix");

                    b.Property<bool>("isFixACD");

                    b.Property<bool>("isFixCD");

                    b.Property<bool>("isHaveACD");

                    b.Property<bool>("isHaveCD");

                    b.Property<bool>("isOverRiding");

                    b.Property<bool>("isPointCalc");

                    b.Property<bool>("isSendSMSPaid");

                    b.Property<bool>("isTeam");

                    b.Property<string>("scmCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("scmName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasAlternateKey("scmCode")
                        .HasName("scmCodeUnique");

                    b.ToTable("MS_Schema");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_SchemaRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<double>("orPctPaid");

                    b.Property<double>("pctPaid");

                    b.Property<string>("reqDesc")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<short>("reqNo");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_SchemaRequirement");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_StatusMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isComplete");

                    b.Property<decimal>("pointMin");

                    b.Property<decimal>("pointToKeepStatus");

                    b.Property<int>("reviewStartMonth");

                    b.Property<int>("reviewTimeYear");

                    b.Property<int>("schemaID");

                    b.Property<string>("statusCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("statusStar");

                    b.HasKey("Id");

                    b.HasIndex("schemaID");

                    b.ToTable("MS_StatusMember");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_BudgetPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<decimal>("budgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("budgetPPh")
                        .HasColumnType("money");

                    b.Property<DateTime?>("budgetPaidDate");

                    b.Property<DateTime?>("budgetPayOrderDate");

                    b.Property<decimal>("budgetVAT")
                        .HasColumnType("money");

                    b.Property<string>("devCode")
                        .HasMaxLength(5);

                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<bool>("isPostFakturPajak");

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<long>("oracleInvoiceID");

                    b.Property<string>("payOrderNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("propCode")
                        .HasMaxLength(5);

                    b.Property<byte>("reqNo");

                    b.Property<string>("scmCode")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.ToTable("TR_BudgetPayment");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_CommPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NPWP")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal>("PPNAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<short>("asUplineNo");

                    b.Property<string>("bankAccName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankAccNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<short>("commNo");

                    b.Property<string>("commPayCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("commTypeCode")
                        .HasMaxLength(3);

                    b.Property<int>("commTypeID");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isAutoCalc");

                    b.Property<string>("isHold")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<bool>("isInstitusi");

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("memberName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("oracleInvoiceID");

                    b.Property<DateTime?>("paidDate");

                    b.Property<string>("paidNo")
                        .HasMaxLength(32);

                    b.Property<DateTime?>("payOrderDate");

                    b.Property<string>("payOrderNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal>("pointValue")
                        .HasColumnType("money");

                    b.Property<decimal?>("pphAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("pphProcessDate");

                    b.Property<short?>("pphYear");

                    b.Property<byte>("reqNo");

                    b.Property<DateTime>("schedDate");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("commTypeID");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("schemaID");

                    b.ToTable("TR_CommPayment");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_CommPaymentPph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AWT_GROUP_NAME")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<double>("PPHRange");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<short>("asUplineNo");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<short>("commNo");

                    b.Property<int>("commTypeID");

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<string>("isHold")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<bool>("isInst");

                    b.Property<bool>("isPKP");

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<short>("pphNo");

                    b.Property<byte>("reqNo");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("commTypeID");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("schemaID");

                    b.ToTable("TR_CommPaymentPph");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_CommPct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("asUplineNo");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<double>("commPctPaid");

                    b.Property<int>("commTypeID");

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<string>("memberCodeN")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("memberCodeR")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("pointTypeID");

                    b.Property<int>("pphRangeID");

                    b.Property<int>("pphRangeInsID");

                    b.Property<int>("statusMemberID");

                    b.HasKey("Id");

                    b.HasIndex("commTypeID");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("pointTypeID");

                    b.HasIndex("pphRangeID");

                    b.HasIndex("pphRangeInsID");

                    b.HasIndex("statusMemberID");

                    b.ToTable("TR_CommPct");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_ManagementFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isPostFakturPajak");

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<decimal>("mgmtFee")
                        .HasColumnType("money");

                    b.Property<decimal>("mgmtPPh")
                        .HasColumnType("money");

                    b.Property<DateTime?>("mgmtPaidDate");

                    b.Property<DateTime?>("mgmtPayOrderDate");

                    b.Property<decimal>("mgmtVAT")
                        .HasColumnType("money");

                    b.Property<long>("oracleInvoiceID");

                    b.Property<string>("payOrderNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("reqNo");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("schemaID");

                    b.ToTable("TR_ManagementFee");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_SoldUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ACDCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("CDCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PPJBDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100);

                    b.Property<string>("batchNo")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<DateTime>("bookDate");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("calculateUseMaster");

                    b.Property<DateTime?>("cancelDate");

                    b.Property<string>("changeDealClosureReason")
                        .HasMaxLength(100);

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<DateTime?>("holdDate");

                    b.Property<string>("holdReason")
                        .HasMaxLength(100);

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<decimal>("netNetPrice")
                        .HasColumnType("money");

                    b.Property<double>("pctBobot");

                    b.Property<double>("pctComm");

                    b.Property<string>("roadCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("roadName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("schemaID");

                    b.Property<string>("termRemarks")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<float>("unitBuildArea");

                    b.Property<int>("unitID");

                    b.Property<float>("unitLandArea");

                    b.Property<string>("unitNo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("money");

                    b.Property<DateTime?>("xprocessDate");

                    b.Property<DateTime?>("xreqInstPayDate");

                    b.HasKey("Id");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("schemaID");

                    b.ToTable("TR_SoldUnit");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_SoldUnitFlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("entityID");

                    b.Property<string>("flagCode")
                        .HasMaxLength(1);

                    b.Property<DateTime>("flagDate");

                    b.Property<int>("flagID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("flagID");

                    b.ToTable("TR_SoldUnitFlag");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_SoldUnitRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bookNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("developerSchemaID");

                    b.Property<int>("entityID");

                    b.Property<double?>("orPctPaid");

                    b.Property<double>("pctPaid");

                    b.Property<DateTime?>("processDate");

                    b.Property<DateTime?>("reqDate");

                    b.Property<string>("reqDesc")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<byte>("reqNo");

                    b.Property<int>("schemaID");

                    b.HasKey("Id");

                    b.HasIndex("developerSchemaID");

                    b.HasIndex("schemaID");

                    b.ToTable("TR_SoldUnitRequirement");
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.LK_CommType", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("LK_CommType")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.LK_PointType", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("LK_PointType")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.LK_Upline", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("LK_Upline")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_BobotComm", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_BobotComm")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_CommPct", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_CommType", "LK_CommType")
                        .WithMany("MS_CommPct")
                        .HasForeignKey("commTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_CommPct")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.NewCommDB.MS_StatusMember", "MS_StatusMember")
                        .WithMany("MS_CommPct")
                        .HasForeignKey("statusMemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_Developer_Schema", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Property", "MS_Property")
                        .WithMany("MS_Developer_Schema")
                        .HasForeignKey("propertyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_Developer_Schema")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupCommPct", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_CommType", "LK_CommType")
                        .WithMany("MS_GroupCommPct")
                        .HasForeignKey("commTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_GroupSchema", "MS_GroupSchema")
                        .WithMany("MS_GroupCommPct")
                        .HasForeignKey("groupSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_StatusMember", "MS_StatusMember")
                        .WithMany("MS_GroupCommPct")
                        .HasForeignKey("statusMemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupCommPctNonStd", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_CommType", "LK_CommType")
                        .WithMany("MS_GroupCommPctNonStd")
                        .HasForeignKey("commTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_GroupSchema", "MS_GroupSchema")
                        .WithMany("MS_GroupCommPctNonStd")
                        .HasForeignKey("groupSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_StatusMember", "MS_StatusMember")
                        .WithMany("MS_GroupCommPctNonStd")
                        .HasForeignKey("statusMemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupSchema", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_GroupSchema")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_GroupSchemaRequirement", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_GroupSchema", "MS_GroupSchema")
                        .WithMany("MS_GroupSchemaRequirement")
                        .HasForeignKey("groupSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_ManagementPct", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany()
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_ManagementPct")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_PointPct", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_PointType", "LK_PointType")
                        .WithMany("MS_PointPct")
                        .HasForeignKey("pointTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_PointPct")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.NewCommDB.MS_StatusMember", "MS_StatusMember")
                        .WithMany("MS_PointPct")
                        .HasForeignKey("statusMemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_PPhRange", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_PPhRange")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_PPhRangeIns", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_PPhRangeIns")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_Property", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_Property")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_SchemaRequirement", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_SchemaRequirement")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.MS_StatusMember", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("MS_StatusMember")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_CommPayment", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_CommType", "LK_CommType")
                        .WithMany("TR_CommPayment")
                        .HasForeignKey("commTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany("TR_CommPayment")
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("TR_CommPayment")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_CommPaymentPph", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_CommType", "LK_CommType")
                        .WithMany("TR_CommPaymentPph")
                        .HasForeignKey("commTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany("TR_CommPaymentPph")
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("TR_CommPaymentPph")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_CommPct", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.LK_CommType", "LK_CommType")
                        .WithMany("TR_CommPct")
                        .HasForeignKey("commTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany("TR_CommPct")
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.LK_PointType", "LK_PointType")
                        .WithMany("TR_CommPct")
                        .HasForeignKey("pointTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_PPhRange", "MS_PPhRange")
                        .WithMany("TR_CommPct")
                        .HasForeignKey("pphRangeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_PPhRangeIns", "MS_PPhRangeIns")
                        .WithMany("TR_CommPct")
                        .HasForeignKey("pphRangeInsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_StatusMember", "MS_StatusMember")
                        .WithMany("TR_CommPct")
                        .HasForeignKey("statusMemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_ManagementFee", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany("TR_ManagementFee")
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("TR_ManagementFee")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_SoldUnit", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany("TR_SoldUnit")
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("TR_SoldUnit")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_SoldUnitFlag", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Flag", "MS_Flag")
                        .WithMany("TR_SoldUnitFlag")
                        .HasForeignKey("flagID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.NewCommDB.TR_SoldUnitRequirement", b =>
                {
                    b.HasOne("VDI.Demo.NewCommDB.MS_Developer_Schema", "MS_Developer_Schema")
                        .WithMany("TR_SoldUnitRequirement")
                        .HasForeignKey("developerSchemaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.NewCommDB.MS_Schema", "MS_Schema")
                        .WithMany("TR_SoldUnitRequirement")
                        .HasForeignKey("schemaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
