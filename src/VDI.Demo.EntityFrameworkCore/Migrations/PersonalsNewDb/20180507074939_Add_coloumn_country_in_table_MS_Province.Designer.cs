// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VDI.Demo.EntityFrameworkCore;

namespace VDI.Demo.Migrations.PersonalsNewDb
{
    [DbContext(typeof(PersonalsNewDbContext))]
    [Migration("20180507074939_Add_coloumn_country_in_table_MS_Province")]
    partial class Add_coloumn_country_in_table_MS_Province
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Abp.IdentityServer4.PersistedGrantEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("AbpPersistedGrants");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_AddrType", b =>
                {
                    b.Property<string>("addrType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("addrTypeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("addrType");

                    b.ToTable("LK_AddrType");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_BankType", b =>
                {
                    b.Property<string>("bankType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("bankTypeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("bankType");

                    b.ToTable("LK_BankType");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_Blood", b =>
                {
                    b.Property<string>("bloodCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("bloodName")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("bloodCode");

                    b.ToTable("LK_Blood");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_Country", b =>
                {
                    b.Property<string>("country")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("ppatkCountryCode")
                        .HasMaxLength(3);

                    b.Property<int>("urut");

                    b.HasKey("country");

                    b.ToTable("LK_Country");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_FamilyStatus", b =>
                {
                    b.Property<string>("famStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("famStatusName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("famStatus");

                    b.ToTable("LK_FamilyStatus");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_Grade", b =>
                {
                    b.Property<string>("gradeCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("gradeName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("gradeCode");

                    b.ToTable("LK_Grade");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_IDType", b =>
                {
                    b.Property<string>("idType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("idTypeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("idType");

                    b.ToTable("LK_IDType");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_KeyPeople", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("keyPeopleId");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("keyPeopleDesc")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("LK_KeyPeople");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_MarStatus", b =>
                {
                    b.Property<string>("marStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("marStatusName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("marStatus");

                    b.ToTable("LK_MarStatus");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_PhonePrefix", b =>
                {
                    b.Property<string>("prefix")
                        .HasMaxLength(10);

                    b.Property<string>("phoneType")
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("length");

                    b.HasKey("prefix", "phoneType");

                    b.HasAlternateKey("phoneType", "prefix");

                    b.ToTable("LK_PhonePrefix");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_PhoneType", b =>
                {
                    b.Property<string>("phoneType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("phoneTypeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("phoneTypeNameProInt")
                        .HasMaxLength(50);

                    b.HasKey("phoneType");

                    b.ToTable("LK_PhoneType");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_Religion", b =>
                {
                    b.Property<string>("relCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("relName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("relNameProInt")
                        .HasMaxLength(20);

                    b.HasKey("relCode");

                    b.ToTable("LK_Religion");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.LK_Spec", b =>
                {
                    b.Property<string>("specCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("specName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("specCode");

                    b.ToTable("LK_Spec");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_BankPersonal", b =>
                {
                    b.Property<string>("bankCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("bankCode");

                    b.ToTable("MS_Bank");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_City", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("cityCode")
                        .HasMaxLength(4);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("cityAbbreviation")
                        .HasMaxLength(10);

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("provinceCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("entityCode", "cityCode");

                    b.HasAlternateKey("cityCode", "entityCode");

                    b.HasIndex("country");

                    b.HasIndex("provinceCode");

                    b.ToTable("MS_City");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_County", b =>
                {
                    b.Property<string>("countyCode")
                        .HasMaxLength(5);

                    b.Property<string>("countyDesc")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("countyCode", "countyDesc");

                    b.ToTable("MS_County");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Document", b =>
                {
                    b.Property<string>("documentType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("documentName")
                        .HasMaxLength(50);

                    b.HasKey("documentType");

                    b.ToTable("MS_Document");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_FranchiseGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("franchiseID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("franchiseGroupName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_FranchiseGroup");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Group", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("groupCode")
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("groupName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("groupParentCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("entityCode", "groupCode");

                    b.ToTable("MS_Group");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_JobTitle", b =>
                {
                    b.Property<string>("jobTitleID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("jobTitleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("jobTitleID");

                    b.ToTable("MS_JobTitle");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Nation", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("nationID")
                        .HasMaxLength(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("nationality")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ppatkNationCode")
                        .HasMaxLength(3);

                    b.HasKey("entityCode", "nationID");

                    b.ToTable("MS_Nation");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Occupation", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("occID")
                        .HasMaxLength(3);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("occDesc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ppatkOccCode")
                        .HasMaxLength(3);

                    b.HasKey("entityCode", "occID");

                    b.ToTable("MS_Occupation");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_PostCode", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("cityCode")
                        .HasMaxLength(4);

                    b.Property<string>("postCode")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("entityCode", "cityCode", "postCode");

                    b.HasAlternateKey("cityCode", "entityCode", "postCode");

                    b.ToTable("MS_PostCode");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_PriorityPass", b =>
                {
                    b.Property<string>("PPNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("custName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("dealCloserID")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("dealCloserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("dealCloserPhone")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("queueNo");

                    b.Property<string>("scmName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("statusCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("PPNo");

                    b.ToTable("MS_PriorityPass");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Province", b =>
                {
                    b.Property<string>("provinceCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ppatkProvinceCode")
                        .HasMaxLength(3);

                    b.Property<string>("provinceName")
                        .HasMaxLength(50);

                    b.HasKey("provinceCode");

                    b.ToTable("MS_Province");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Regency", b =>
                {
                    b.Property<string>("regencyCode")
                        .HasMaxLength(5);

                    b.Property<string>("regencyName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("regencyCode", "regencyName");

                    b.ToTable("MS_Regency");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_RelationResident", b =>
                {
                    b.Property<string>("kkCode")
                        .HasMaxLength(10);

                    b.Property<string>("RefID")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("psCode")
                        .HasMaxLength(10);

                    b.Property<string>("remark")
                        .HasMaxLength(100);

                    b.HasKey("kkCode", "RefID");

                    b.ToTable("MS_RelationResident");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Street", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("cityCode")
                        .HasMaxLength(4);

                    b.Property<string>("postCode")
                        .HasMaxLength(50);

                    b.Property<int>("streetNo");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("streetName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("entityCode", "cityCode", "postCode", "streetNo");

                    b.HasAlternateKey("cityCode", "entityCode", "postCode", "streetNo");

                    b.ToTable("MS_Street");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Village", b =>
                {
                    b.Property<string>("villageCode")
                        .HasMaxLength(5);

                    b.Property<string>("villageName")
                        .HasMaxLength(50);

                    b.Property<string>("cityCode")
                        .HasMaxLength(5);

                    b.Property<string>("countyCode")
                        .HasMaxLength(5);

                    b.Property<string>("regencyCode")
                        .HasMaxLength(5);

                    b.Property<string>("provinceCode")
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("villageCode", "villageName", "cityCode", "countyCode", "regencyCode", "provinceCode");

                    b.HasAlternateKey("cityCode", "countyCode", "provinceCode", "regencyCode", "villageCode", "villageName");

                    b.ToTable("MS_Village");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.PERSONALS", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<string>("FPTransCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("NPWP")
                        .HasMaxLength(30);

                    b.Property<string>("UploadContentImage");

                    b.Property<string>("UploadContentType")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("birthDate");

                    b.Property<string>("birthPlace")
                        .HasMaxLength(30);

                    b.Property<string>("bloodCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("familyStatus")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<bool>("isActive");

                    b.Property<bool>("isInstitute");

                    b.Property<string>("mailGroup")
                        .HasMaxLength(10);

                    b.Property<string>("marCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("nationID")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("occID")
                        .HasMaxLength(3);

                    b.Property<string>("parentPSCode")
                        .HasMaxLength(8);

                    b.Property<string>("relCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("sex")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("entityCode", "psCode");

                    b.ToTable("PERSONALS");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.PERSONALS_MEMBER", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<string>("scmCode")
                        .HasMaxLength(3);

                    b.Property<string>("memberCode")
                        .HasMaxLength(12);

                    b.Property<string>("ACDCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("CDCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("PTName")
                        .HasMaxLength(50);

                    b.Property<string>("PrincName")
                        .HasMaxLength(50);

                    b.Property<string>("bankAccName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankAccNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("bankAccountRefID");

                    b.Property<string>("bankBranchName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("franchiseGroup")
                        .HasMaxLength(50);

                    b.Property<int?>("id_role");

                    b.Property<bool>("isACD");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isActiveEmail");

                    b.Property<bool>("isCD");

                    b.Property<bool>("isInstitusi");

                    b.Property<bool>("isMember");

                    b.Property<bool>("isPKP");

                    b.Property<DateTime>("joinDate");

                    b.Property<string>("memberStatusCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("mothName")
                        .HasMaxLength(50);

                    b.Property<string>("parentMemberCode")
                        .HasMaxLength(20);

                    b.Property<string>("password")
                        .HasMaxLength(20);

                    b.Property<DateTime>("regDate");

                    b.Property<string>("remarks1")
                        .HasMaxLength(200);

                    b.Property<string>("remarks2")
                        .HasMaxLength(200);

                    b.Property<string>("remarks3")
                        .HasMaxLength(200);

                    b.Property<string>("specCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("spouName")
                        .HasMaxLength(50);

                    b.Property<string>("userName")
                        .HasMaxLength(20);

                    b.HasKey("entityCode", "psCode", "scmCode", "memberCode");

                    b.HasAlternateKey("entityCode", "memberCode", "psCode", "scmCode");

                    b.HasIndex("bankCode");

                    b.HasIndex("bankType");

                    b.HasIndex("specCode");

                    b.ToTable("PERSONALS_MEMBER");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.SYS_Counter", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.HasKey("entityCode", "psCode");

                    b.ToTable("SYS_Counter");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.SYS_CounterMember", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("scmCode")
                        .HasMaxLength(3);

                    b.Property<string>("memberDigit")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("entityCode", "scmCode");

                    b.HasAlternateKey("entityCode", "memberDigit", "scmCode");

                    b.ToTable("SYS_CounterMember");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.SYS_RolesAddr", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("rolesname")
                        .HasMaxLength(50);

                    b.Property<string>("addrType")
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("entityCode", "rolesname", "addrType");

                    b.HasAlternateKey("addrType", "entityCode", "rolesname");

                    b.ToTable("SYS_RolesAddr");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.SYS_UserGroup", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("userName")
                        .HasMaxLength(50);

                    b.Property<string>("groupCode")
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("entityCode", "userName", "groupCode");

                    b.HasAlternateKey("entityCode", "groupCode", "userName");

                    b.ToTable("SYS_UserGroup");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Address", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<string>("addrType")
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<string>("Kecamatan")
                        .HasMaxLength(250);

                    b.Property<string>("Kelurahan")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("postCode")
                        .HasMaxLength(10);

                    b.Property<string>("province")
                        .HasMaxLength(250);

                    b.HasKey("entityCode", "psCode", "refID", "addrType");

                    b.HasAlternateKey("addrType", "entityCode", "psCode", "refID");

                    b.ToTable("TR_Address");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_BankAccount", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<string>("BankCode")
                        .HasMaxLength(5);

                    b.Property<string>("AccountName")
                        .HasMaxLength(200);

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("BankBranchName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<bool?>("isAutoDebit");

                    b.Property<bool?>("isMain");

                    b.HasKey("entityCode", "psCode", "refID", "BankCode");

                    b.HasAlternateKey("BankCode", "entityCode", "psCode", "refID");

                    b.ToTable("TR_BankAccount");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Company", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("coAddress")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("coCity")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("coCountry")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("coName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("coPostCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("coType")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("jobTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("entityCode", "psCode", "refID");

                    b.ToTable("TR_Company");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Document", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<string>("documentType")
                        .HasMaxLength(25);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("documentBinary");

                    b.Property<string>("documentPicType")
                        .HasMaxLength(10);

                    b.Property<int?>("documentRef");

                    b.HasKey("entityCode", "psCode", "documentType");

                    b.HasAlternateKey("documentType", "entityCode", "psCode");

                    b.ToTable("TR_Document");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Email", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("entityCode", "psCode", "refID");

                    b.ToTable("TR_Email");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_EmailInvalid", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("entityCode", "psCode", "refID", "email");

                    b.HasAlternateKey("email", "entityCode", "psCode", "refID");

                    b.ToTable("TR_EmailInvalid");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Family", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<DateTime?>("birthDate");

                    b.Property<string>("familyName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("familyStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("occID")
                        .HasMaxLength(3);

                    b.HasKey("entityCode", "psCode", "refID");

                    b.ToTable("TR_Family");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Group", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("groupCode")
                        .HasMaxLength(5);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.HasKey("entityCode", "groupCode", "psCode");

                    b.ToTable("TR_Group");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_ID", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<DateTime?>("expiredDate");

                    b.Property<string>("idNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("idType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("entityCode", "psCode", "refID");

                    b.HasIndex("idType");

                    b.ToTable("TR_ID");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_IDFamily", b =>
                {
                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("familyRefID");

                    b.Property<int>("refID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<DateTime?>("expiredDate");

                    b.Property<string>("idNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("idType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("psCode", "familyRefID", "refID");

                    b.HasAlternateKey("familyRefID", "psCode", "refID");

                    b.ToTable("TR_IDFamily");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_KeyPeople", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("trKeyPeopleId");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<bool>("isActive");

                    b.Property<int>("keyPeopleId");

                    b.Property<string>("keyPeopleName")
                        .HasMaxLength(100);

                    b.Property<string>("keyPeoplePSCode")
                        .HasMaxLength(8);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.HasKey("Id");

                    b.HasIndex("keyPeopleId");

                    b.ToTable("TR_KeyPeople");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Phone", b =>
                {
                    b.Property<string>("entityCode")
                        .HasMaxLength(1);

                    b.Property<string>("psCode")
                        .HasMaxLength(8);

                    b.Property<int>("refID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("inputTime");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnName("inputUN");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("modifTime");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnName("modifUN");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("phoneType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("remarks")
                        .HasMaxLength(100);

                    b.HasKey("entityCode", "psCode", "refID");

                    b.HasIndex("phoneType");

                    b.ToTable("TR_Phone");
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_City", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.LK_Country", "LK_Country")
                        .WithMany("MS_City")
                        .HasForeignKey("country")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PersonalsDB.MS_Province", "MS_Province")
                        .WithMany("MS_City")
                        .HasForeignKey("provinceCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_PostCode", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.MS_City", "MS_City")
                        .WithMany()
                        .HasForeignKey("entityCode", "cityCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.MS_Street", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.MS_PostCode", "MS_PostCode")
                        .WithMany("MS_Street")
                        .HasForeignKey("entityCode", "cityCode", "postCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.PERSONALS_MEMBER", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.MS_BankPersonal", "MS_BankPersonal")
                        .WithMany()
                        .HasForeignKey("bankCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PersonalsDB.LK_BankType", "LK_bankType")
                        .WithMany()
                        .HasForeignKey("bankType")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PersonalsDB.LK_Spec", "LK_Spec")
                        .WithMany()
                        .HasForeignKey("specCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Group", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.MS_Group", "MS_Group")
                        .WithMany("TR_Group")
                        .HasForeignKey("entityCode", "groupCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_ID", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.LK_IDType", "LK_IDType")
                        .WithMany("TR_ID")
                        .HasForeignKey("idType")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_KeyPeople", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.LK_KeyPeople", "LK_KeyPeople")
                        .WithMany("TR_KeyPeole")
                        .HasForeignKey("keyPeopleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PersonalsDB.TR_Phone", b =>
                {
                    b.HasOne("VDI.Demo.PersonalsDB.LK_PhoneType", "LK_PhoneType")
                        .WithMany("TR_Phone")
                        .HasForeignKey("phoneType")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
