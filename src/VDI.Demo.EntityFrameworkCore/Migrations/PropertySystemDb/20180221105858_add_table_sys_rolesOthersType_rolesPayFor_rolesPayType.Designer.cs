// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VDI.Demo.EntityFrameworkCore;

namespace VDI.Demo.Migrations.PropertySystemDb
{
    [DbContext(typeof(PropertySystemDbContext))]
    [Migration("20180221105858_add_table_sys_rolesOthersType_rolesPayFor_rolesPayType")]
    partial class add_table_sys_rolesOthersType_rolesPayFor_rolesPayType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_Alloc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("allocCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("allocDesc")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isVAT");

                    b.Property<int?>("payForID");

                    b.HasKey("Id");

                    b.HasIndex("allocCode")
                        .IsUnique()
                        .HasName("allocCodeUnique");

                    b.HasIndex("payForID");

                    b.ToTable("LK_Alloc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_BookingTrType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bookingTrType")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("ket")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("LK_BookingTrType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_LetterStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("letterStatusCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("letterStatusDesc")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("letterStatusCode")
                        .IsUnique()
                        .HasName("letterStatusCodeUnique");

                    b.ToTable("LK_LetterStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_OthersType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isAdjSAD");

                    b.Property<bool>("isOTP");

                    b.Property<bool>("isOthers");

                    b.Property<bool>("isPayment");

                    b.Property<bool>("isSDH");

                    b.Property<string>("othersTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("othersTypeDesc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("sortNum");

                    b.HasKey("Id");

                    b.ToTable("LK_OthersType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isIncome");

                    b.Property<bool>("isInventory");

                    b.Property<bool>("isSDH");

                    b.Property<bool>("isSched");

                    b.Property<string>("payForCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("payForName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("LK_PayFor");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isBooking");

                    b.Property<bool>("isIncome");

                    b.Property<bool>("isInventory");

                    b.Property<string>("payTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("payTypeDesc")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("payTypeCode")
                        .IsUnique()
                        .HasName("payTypeCodeUnique");

                    b.ToTable("LK_PayType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("promotionCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("promotionDesc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("promotionCode")
                        .IsUnique()
                        .HasName("promotionCodeUnique");

                    b.ToTable("LK_Promotion");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool?>("isActive");

                    b.Property<string>("reasonCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("reasonDesc")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("reasonCode")
                        .IsUnique()
                        .HasName("reasonCodeUnique");

                    b.ToTable("LK_Reason");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_SADStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("statusCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("statusDesc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("statusCode")
                        .IsUnique()
                        .HasName("statusCodeUnique");

                    b.ToTable("LK_SADStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_Corres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("corresCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("corresName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.ToTable("MS_Corres");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_DocTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("docID");

                    b.Property<int>("entityID");

                    b.Property<bool?>("isActive");

                    b.Property<bool?>("isMaster");

                    b.Property<string>("templateFile")
                        .IsRequired();

                    b.Property<string>("templateName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("docID");

                    b.ToTable("MS_DocTemplate");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_DocumentPS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("docCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("docName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.HasIndex("docCode")
                        .IsUnique()
                        .HasName("docCodeCodeUnique");

                    b.ToTable("MS_Document");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_KuasaDireksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("docID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("suratKuasaImage")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("docID");

                    b.ToTable("MS_KuasaDireksi");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_KuasaDireksiPeople", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("kuasaDireksiID");

                    b.Property<int?>("officerID");

                    b.Property<string>("signeeEmail")
                        .HasMaxLength(250);

                    b.Property<string>("signeeName")
                        .HasMaxLength(250);

                    b.Property<string>("signeePhone")
                        .HasMaxLength(20);

                    b.Property<string>("signeePosition")
                        .HasMaxLength(250);

                    b.Property<string>("signeeSignImage");

                    b.HasKey("Id");

                    b.HasIndex("kuasaDireksiID");

                    b.ToTable("MS_KuasaDireksiPeople");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_MappingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("documentType")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("entityID");

                    b.Property<string>("payMethod")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_MappingDocument");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_MappingTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("activeFrom");

                    b.Property<DateTime?>("activeTo");

                    b.Property<int>("docID");

                    b.Property<int>("docTemplateID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("docTemplateID");

                    b.ToTable("MS_MappingTemplate");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_SalesEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("EntityID");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("eventCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("eventName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("eventCode")
                        .IsUnique()
                        .HasName("eventCodeUnique");

                    b.ToTable("MS_SalesEvent");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_ShopBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("shopBusinessCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("shopBusinessName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("sort");

                    b.HasKey("Id");

                    b.HasIndex("shopBusinessCode")
                        .IsUnique()
                        .HasName("shopBusinessCodeUnique");

                    b.ToTable("MS_ShopBusiness");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_SumberDana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<int>("sort");

                    b.Property<string>("sumberDanaCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("sumberDanaName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_SumberDana");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_TaxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("taxTypeCode")
                        .HasMaxLength(5);

                    b.Property<string>("taxTypeDesc")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("MS_TaxType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_TermDiscOnlineBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("discName")
                        .HasMaxLength(50);

                    b.Property<double>("pctDisc");

                    b.Property<int>("termID");

                    b.HasKey("Id");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermDiscOnlineBooking");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_TransFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("parentTransCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("transCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("transDesc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("transName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("transCode")
                        .IsUnique()
                        .HasName("transCodeUnique");

                    b.ToTable("MS_TransFrom");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_TujuanTransaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<int>("sort");

                    b.Property<string>("tujuanTransaksiCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("tujuanTransaksiName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_TujuanTransaksi");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_FinanceCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ADJNo");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("TTBGNo");

                    b.Property<int>("accID");

                    b.Property<int>("entityID");

                    b.Property<long>("pmtBatchNo");

                    b.Property<long>("transNo");

                    b.Property<string>("year")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("accID");

                    b.ToTable("SYS_FinanceCounter");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_RolesOthersType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<int>("othersTypeID");

                    b.Property<int>("rolesID");

                    b.HasKey("Id");

                    b.HasIndex("othersTypeID");

                    b.ToTable("SYS_RolesOthersType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_RolesPayFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<int>("payForID");

                    b.Property<int>("rolesID");

                    b.HasKey("Id");

                    b.HasIndex("payForID");

                    b.ToTable("SYS_RolesPayFor");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_RolesPayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<int>("payTypeID");

                    b.Property<int>("rolesID");

                    b.HasKey("Id");

                    b.HasIndex("payTypeID");

                    b.ToTable("SYS_RolesPayType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingCancel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingHeaderID");

                    b.Property<DateTime?>("cancelDate");

                    b.Property<int>("entityID");

                    b.Property<decimal>("lostAmount")
                        .HasColumnType("money");

                    b.Property<string>("newBookCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("reasonID");

                    b.Property<decimal>("refundAmount")
                        .HasColumnType("money");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("reasonID");

                    b.ToTable("TR_BookingCancel");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingChangeOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ADDNDate");

                    b.Property<string>("ADDNNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingHeaderID");

                    b.Property<decimal>("costAmt")
                        .HasColumnType("money");

                    b.Property<double>("costPct");

                    b.Property<string>("docNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("entityID");

                    b.Property<decimal?>("jumlahSetoran")
                        .HasColumnType("money");

                    b.Property<string>("newBankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("newFinType")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("newPsCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<decimal?>("nilaiJualObjekPajakBangunan")
                        .HasColumnType("money");

                    b.Property<decimal?>("nilaiJualObjekPajakTanah")
                        .HasColumnType("money");

                    b.Property<decimal?>("nilaiPengalihan")
                        .HasColumnType("money");

                    b.Property<string>("noObjekPajak")
                        .HasMaxLength(50);

                    b.Property<string>("noTandaPenerimaanNegara")
                        .HasMaxLength(50);

                    b.Property<string>("oldBankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("oldFinType")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("oldPsCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("seqNo");

                    b.Property<DateTime?>("tanggalPenyetoran");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.ToTable("TR_BookingChangeOwner");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingCorres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingHeaderID");

                    b.Property<DateTime>("corresDate");

                    b.Property<int>("corresId");

                    b.Property<short>("corresNo");

                    b.Property<DateTime>("dueDate");

                    b.Property<int>("entityID");

                    b.Property<DateTime>("mailDate");

                    b.Property<string>("recepient")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("refNo")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("corresId");

                    b.ToTable("TR_BookingCorres");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BFAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<double>("adjArea");

                    b.Property<decimal>("adjPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<decimal>("amountComm")
                        .HasColumnType("money");

                    b.Property<decimal>("amountMKT")
                        .HasColumnType("money");

                    b.Property<double>("area");

                    b.Property<int>("bookNo");

                    b.Property<int>("bookingHeaderID");

                    b.Property<int>("bookingTrTypeID");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("combineCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int>("entityID");

                    b.Property<int>("finTypeID");

                    b.Property<int>("itemID");

                    b.Property<decimal>("netNetPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("netPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("netPriceCash")
                        .HasColumnType("money");

                    b.Property<decimal>("netPriceComm")
                        .HasColumnType("money");

                    b.Property<decimal>("netPriceMKT")
                        .HasColumnType("money");

                    b.Property<double>("pctDisc");

                    b.Property<double>("pctTax");

                    b.Property<short>("refNo");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("bookingTrTypeID");

                    b.HasIndex("itemID");

                    b.ToTable("TR_BookingDetail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailAddDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("addDiscDesc")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<short>("addDiscNo");

                    b.Property<decimal>("amtAddDisc")
                        .HasColumnType("money");

                    b.Property<int>("bookingDetailID");

                    b.Property<int>("entityID");

                    b.Property<bool>("isAmount");

                    b.Property<double>("pctAddDisc");

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_BookingDetailAddDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("adjDate");

                    b.Property<int>("adjNo");

                    b.Property<DateTime>("area");

                    b.Property<int>("bookingDetailID");

                    b.Property<int>("entityID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_BookingDetailAdjustment");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailDP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("DPAmount")
                        .HasColumnType("money");

                    b.Property<double>("DPPct");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingDetailID");

                    b.Property<short>("daysDue");

                    b.Property<int?>("dpCalcID");

                    b.Property<byte>("dpNo");

                    b.Property<int>("entityID");

                    b.Property<bool>("isSetting");

                    b.Property<short?>("monthsDue");

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.HasIndex("dpCalcID");

                    b.ToTable("TR_BookingDetailDP");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("allocID");

                    b.Property<int>("bookingDetailID");

                    b.Property<DateTime>("dueDate");

                    b.Property<int>("entityID");

                    b.Property<decimal>("netAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("netOut")
                        .HasColumnType("money");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<short>("schedNo");

                    b.Property<decimal>("vatAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("vatOut")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("allocID");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_BookingDetailSchedule");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailScheduleOtorisasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("allocID");

                    b.Property<int>("bookingDetailID");

                    b.Property<DateTime>("dueDate");

                    b.Property<int>("entityID");

                    b.Property<decimal>("netAmt")
                        .HasColumnType("money");

                    b.Property<short>("schedNo");

                    b.Property<decimal>("vatAmt")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("allocID");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_BookingDetailScheduleOtorisasi");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingHeaderID");

                    b.Property<string>("docCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<DateTime>("docDate");

                    b.Property<string>("docNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.ToTable("TR_BookingDocument");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BFPayTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DPCalcType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("KPRBankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("MS_TransFromId");

                    b.Property<string>("NUP")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<short>("PPJBDue");

                    b.Property<int>("SADStatusID");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("bankRekeningPemilik")
                        .HasMaxLength(50);

                    b.Property<string>("bookCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("bookDate");

                    b.Property<DateTime?>("cancelDate");

                    b.Property<string>("discBFCalcType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int>("entityID");

                    b.Property<int>("eventID");

                    b.Property<int?>("facadeID");

                    b.Property<bool>("isPenaltyStop");

                    b.Property<bool?>("isSK");

                    b.Property<bool>("isSMS");

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("memberName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("netPriceComm")
                        .HasColumnType("money");

                    b.Property<string>("nomorRekeningPemilik")
                        .HasMaxLength(50);

                    b.Property<int>("promotionID");

                    b.Property<string>("psCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(1500);

                    b.Property<int>("schemaID");

                    b.Property<int>("shopBusinessID");

                    b.Property<int?>("sumberDanaID");

                    b.Property<int>("termID");

                    b.Property<string>("termRemarks")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("transID");

                    b.Property<int?>("tujuanTransaksiID");

                    b.Property<int>("unitID");

                    b.HasKey("Id");

                    b.HasIndex("MS_TransFromId");

                    b.HasIndex("SADStatusID");

                    b.HasIndex("bookCode")
                        .IsUnique()
                        .HasName("bookCodeUnique");

                    b.HasIndex("eventID");

                    b.HasIndex("facadeID");

                    b.HasIndex("promotionID");

                    b.HasIndex("shopBusinessID");

                    b.HasIndex("sumberDanaID");

                    b.HasIndex("termID");

                    b.HasIndex("tujuanTransaksiID");

                    b.HasIndex("unitID");

                    b.ToTable("TR_BookingHeader");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeaderTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DPCalcType")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("PPJBDue");

                    b.Property<double>("addDisc");

                    b.Property<int>("addDiscNo");

                    b.Property<int>("bookingHeaderID");

                    b.Property<string>("discBFCalcType")
                        .HasMaxLength(1);

                    b.Property<int>("entityID");

                    b.Property<int>("finStartDue");

                    b.Property<string>("finTypeCode")
                        .HasMaxLength(5);

                    b.Property<bool>("isActive");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<int>("termID");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("termID");

                    b.ToTable("TR_BookingHeaderTerm");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingHeaderID");

                    b.Property<int>("entityID");

                    b.Property<decimal>("grossPrice")
                        .HasColumnType("money");

                    b.Property<int>("itemID");

                    b.Property<string>("renovCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int?>("termID");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("itemID");

                    b.HasIndex("termID");

                    b.ToTable("TR_BookingItemPrice");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingSalesDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingHeaderID");

                    b.Property<int>("itemID");

                    b.Property<double>("pctDisc");

                    b.Property<double>("pctTax");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("itemID");

                    b.ToTable("TR_BookingSalesDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<int>("bookingDetailID");

                    b.Property<int>("taxTypeID");

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.HasIndex("taxTypeID");

                    b.ToTable("TR_BookingTax");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_CashAddDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<double>("addDisc");

                    b.Property<string>("addDiscDesc")
                        .HasMaxLength(500);

                    b.Property<byte>("addDiscNo");

                    b.Property<int>("bookNo");

                    b.Property<int>("bookingDetailID");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_CashAddDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_CommAddDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("TR_BookingHeaderId");

                    b.Property<double>("addDisc");

                    b.Property<string>("addDiscDesc")
                        .HasMaxLength(500);

                    b.Property<byte>("addDiscNo");

                    b.Property<int>("bookNo");

                    b.Property<int>("bookingDetailID");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.HasIndex("TR_BookingHeaderId");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_CommAddDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_DPHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("DPAmount")
                        .HasColumnType("money");

                    b.Property<double>("DPPct");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookingDetailID");

                    b.Property<short>("daysDue");

                    b.Property<int?>("dpCalcID");

                    b.Property<byte>("dpNo");

                    b.Property<int>("entityID");

                    b.Property<bool>("isSetting");

                    b.Property<short?>("monthsDue");

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_DPHistory");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_MKTAddDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<double>("addDisc");

                    b.Property<string>("addDiscDesc")
                        .HasMaxLength(500);

                    b.Property<byte>("addDiscNo");

                    b.Property<int>("bookNo");

                    b.Property<int>("bookingDetailID");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_MKTAddDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("MS_AccountId");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("chequeNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("dueDate");

                    b.Property<int>("entityID");

                    b.Property<string>("ket")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("othersTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int>("payNo");

                    b.Property<int>("payTypeID");

                    b.Property<int>("paymentHeaderID");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("MS_AccountId");

                    b.HasIndex("payTypeID");

                    b.HasIndex("paymentHeaderID");

                    b.ToTable("TR_PaymentDetail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentDetailAlloc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("MS_AccountId");

                    b.Property<int>("entityID");

                    b.Property<decimal>("netAmt")
                        .HasColumnType("money");

                    b.Property<int>("paymentDetailID");

                    b.Property<short>("schedNo");

                    b.Property<decimal>("vatAmt")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("MS_AccountId");

                    b.HasIndex("paymentDetailID");

                    b.ToTable("TR_PaymentDetailAlloc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("SMSSentTime");

                    b.Property<int>("accountID");

                    b.Property<DateTime?>("apvTime");

                    b.Property<string>("apvUN")
                        .HasMaxLength(50);

                    b.Property<int?>("bookingHeaderID");

                    b.Property<DateTime?>("clearDate");

                    b.Property<string>("combineCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("controlNo")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<int>("entityID");

                    b.Property<bool?>("hadmail");

                    b.Property<bool>("isSMS");

                    b.Property<string>("ket")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<DateTime?>("mailTime");

                    b.Property<int?>("payForID");

                    b.Property<DateTime>("paymentDate");

                    b.Property<string>("transNo")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.HasKey("Id");

                    b.HasIndex("accountID");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("payForID");

                    b.ToTable("TR_PaymentHeader");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PenaltySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("ScheduleAllocCode")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ScheduleNetAmount")
                        .HasColumnType("money");

                    b.Property<int>("ScheduleTerm");

                    b.Property<int>("SeqNo");

                    b.Property<int>("bookingHeaderID");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("createdOn");

                    b.Property<int>("entityID");

                    b.Property<int?>("penaltyAging");

                    b.Property<decimal?>("penaltyAmount")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.ToTable("TR_PenaltySchedule");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_ReminderLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bankBranchCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankRekNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("bookingHeaderID");

                    b.Property<DateTime>("clearDate");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<DateTime>("dueDate");

                    b.Property<int>("entityID");

                    b.Property<DateTime>("letterDate");

                    b.Property<string>("letterNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("letterStatusID");

                    b.Property<string>("letterType")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<DateTime>("mailDate");

                    b.Property<decimal>("outAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("overDue")
                        .HasColumnType("money");

                    b.Property<decimal>("payedAmt")
                        .HasColumnType("money");

                    b.Property<int>("penAge");

                    b.Property<decimal>("penAmt")
                        .HasColumnType("money");

                    b.Property<DateTime>("printDate");

                    b.Property<DateTime>("receiveDate");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("sadOfficer1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("sadOfficer2")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("sadPosition1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("sadPosition2")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("totAmt")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("letterStatusID");

                    b.ToTable("TR_ReminderLetter");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_SSPDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("SSPHeaderID");

                    b.Property<int>("accountID");

                    b.Property<int>("bookingDetailID");

                    b.Property<double>("buildArea");

                    b.Property<int>("entityID");

                    b.Property<double>("landArea");

                    b.Property<decimal>("netAmt")
                        .HasColumnType("money");

                    b.Property<decimal>("pphAmt")
                        .HasColumnType("money");

                    b.Property<string>("psCity")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("psCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("psName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("unitDesc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("SSPHeaderID");

                    b.HasIndex("accountID");

                    b.HasIndex("bookingDetailID");

                    b.ToTable("TR_SSPDetail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_SSPHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("batchNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.Property<DateTime>("generateDate");

                    b.Property<string>("period")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("TR_SSPHeader");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.LK_BankLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bankLevelCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("bankLevelName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("isBankBranchType");

                    b.Property<bool>("isBankType");

                    b.HasKey("Id");

                    b.HasIndex("bankLevelCode")
                        .IsUnique()
                        .HasName("bankLevelCodeUnique");

                    b.ToTable("LK_BankLevel");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_BankBranch_JKB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("JKBID");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bankBranchID");

                    b.HasKey("Id");

                    b.HasIndex("JKBID");

                    b.HasIndex("bankBranchID");

                    b.ToTable("MP_BankBranch_JKB");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_CompanyProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("companyID");

                    b.Property<bool>("mainStatus");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("companyID");

                    b.HasIndex("projectID");

                    b.ToTable("MP_CompanyProject");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_OfficerProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("email");

                    b.Property<int>("officerID");

                    b.Property<string>("phoneNo");

                    b.Property<int>("projectID");

                    b.Property<string>("whatsappNo");

                    b.HasKey("Id");

                    b.HasIndex("officerID");

                    b.HasIndex("projectID");

                    b.ToTable("MP_OfficerProject");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NATURE_ACCOUNT_BANK")
                        .HasMaxLength(10);

                    b.Property<string>("NATURE_ACCOUNT_DEP")
                        .HasMaxLength(10);

                    b.Property<string>("ORG_ID")
                        .HasMaxLength(5);

                    b.Property<string>("PROVINCE_ID")
                        .HasMaxLength(2);

                    b.Property<string>("accCode")
                        .HasMaxLength(5);

                    b.Property<string>("accName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("accNo")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("bankBranchID");

                    b.Property<int>("bankID");

                    b.Property<int>("coID");

                    b.Property<string>("devCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("accCode")
                        .IsUnique()
                        .HasName("accCodeUnique")
                        .HasFilter("[accCode] IS NOT NULL");

                    b.HasIndex("bankBranchID");

                    b.HasIndex("bankID");

                    b.HasIndex("coID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_Account");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_AccountEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("accountID");

                    b.Property<string>("emailCc")
                        .HasMaxLength(100);

                    b.Property<string>("emailTo")
                        .HasMaxLength(200);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.HasIndex("accountID");

                    b.ToTable("MS_AccountEmail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("SWIFTCode")
                        .HasMaxLength(11);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("att")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("bankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("bankTermId");

                    b.Property<int>("bankTypeID");

                    b.Property<string>("deputyName1")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("deputyName2")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<bool>("divertToRO");

                    b.Property<int>("entityID");

                    b.Property<string>("fax")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("groupBankCode")
                        .HasMaxLength(20);

                    b.Property<string>("headName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("isActive");

                    b.Property<string>("parentBankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("relationOfficerEmail")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankCode")
                        .IsUnique()
                        .HasName("bankCodeUnique");

                    b.HasIndex("bankTypeID");

                    b.ToTable("MS_Bank");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PICName")
                        .HasMaxLength(50);

                    b.Property<string>("PICPosition")
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankBranchName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchType");

                    b.Property<int>("bankBranchTypeID");

                    b.Property<int>("bankID");

                    b.Property<string>("bankRekNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("clusterCode")
                        .HasMaxLength(5);

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<string>("phone")
                        .HasMaxLength(20);

                    b.Property<string>("projectCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchCode")
                        .IsUnique()
                        .HasName("bankBranchCodeUnique");

                    b.HasIndex("bankBranchTypeID");

                    b.HasIndex("bankID");

                    b.ToTable("MS_BankBranch");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("APLogin")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("APServer")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("APcoCode")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("KPP_Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KPP_TTD")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NPWP")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NPWPAddress")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("ORG_ID")
                        .HasMaxLength(5);

                    b.Property<string>("PKP")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("PKPDate");

                    b.Property<string>("PPATK_PBJ_code")
                        .HasMaxLength(10);

                    b.Property<string>("accountNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("bankBranch")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("centerManager")
                        .HasMaxLength(50);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("coCodeParent")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("coName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("companyEmail");

                    b.Property<string>("country");

                    b.Property<int>("entityID");

                    b.Property<string>("faxNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("image");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isCA");

                    b.Property<string>("leasingManager")
                        .HasMaxLength(50);

                    b.Property<string>("mailAddress")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("phoneNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("postCodeID");

                    b.Property<string>("website")
                        .HasMaxLength(100);

                    b.Property<string>("workHour")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("coCode")
                        .IsUnique()
                        .HasName("coCodeUnique");

                    b.HasIndex("postCodeID");

                    b.ToTable("MS_Company");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("countryCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("countryCode")
                        .IsUnique()
                        .HasName("countryCodeUnique");

                    b.ToTable("MS_Country");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("departmentCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("departmentEmail");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("departmentWhatsapp")
                        .HasMaxLength(20);

                    b.Property<bool>("isActive");

                    b.HasKey("Id");

                    b.HasIndex("departmentCode")
                        .IsUnique()
                        .HasName("departmentCodeUnique");

                    b.ToTable("MS_Department");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("entityCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("entityName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("entityCode")
                        .IsUnique()
                        .HasName("entityCodeUnique");

                    b.ToTable("MS_Entity");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_JenisKantorBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("JKBCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("JKBName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.HasIndex("JKBCode")
                        .IsUnique()
                        .HasName("JKBCodeUnique");

                    b.ToTable("MS_JenisKantorBank");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Officer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("departmentID");

                    b.Property<bool>("isActive");

                    b.Property<string>("officerEmail")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("officerName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("officerPhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("positionID");

                    b.HasKey("Id");

                    b.HasIndex("departmentID");

                    b.HasIndex("positionID");

                    b.ToTable("MS_Officer");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("departmentID");

                    b.Property<bool>("isActive");

                    b.Property<string>("positionCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("positionName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.HasIndex("departmentID");

                    b.ToTable("MS_Position");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_PostCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("postCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("province")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("regency")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("townID");

                    b.Property<string>("village")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("townID");

                    b.ToTable("MS_PostCode");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BIZ_UNIT_ID")
                        .HasMaxLength(2);

                    b.Property<string>("BusinessGroup")
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DIV_ID")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("DMT_ProjectGroupCode");

                    b.Property<string>("DMT_ProjectGroupName");

                    b.Property<string>("FinanceContact")
                        .HasMaxLength(200);

                    b.Property<string>("FinanceEmail")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ORG_ID")
                        .HasMaxLength(5);

                    b.Property<string>("OperationalGroup")
                        .HasMaxLength(5);

                    b.Property<string>("PGContact")
                        .HasMaxLength(500);

                    b.Property<string>("PGEmail")
                        .HasMaxLength(200);

                    b.Property<int?>("PGManagerID");

                    b.Property<string>("PGPhone")
                        .HasMaxLength(100);

                    b.Property<int?>("PGStaffID");

                    b.Property<string>("PROJECT_ID")
                        .HasMaxLength(3);

                    b.Property<string>("SADBM")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int?>("SADBMID");

                    b.Property<string>("SADContact")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("SADEmail")
                        .HasMaxLength(200);

                    b.Property<string>("SADFax")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SADManager")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("SADManagerID");

                    b.Property<string>("SADPhone")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SADStaff")
                        .IsRequired()
                        .HasMaxLength(550);

                    b.Property<int?>("SADStaffID");

                    b.Property<string>("TaxGroup")
                        .HasMaxLength(200);

                    b.Property<int?>("bankRelationManagerID");

                    b.Property<int?>("bankRelationStaffID");

                    b.Property<int?>("callCenterManagerID");

                    b.Property<int?>("callCenterStaffID");

                    b.Property<int>("entityID");

                    b.Property<int?>("financeManagerID");

                    b.Property<int?>("financeStaffID");

                    b.Property<string>("image")
                        .HasMaxLength(300);

                    b.Property<bool>("isBookingCashier");

                    b.Property<bool>("isBookingSMS");

                    b.Property<bool>("isConfirmSP");

                    b.Property<bool>("isDMT");

                    b.Property<bool>("isPublish");

                    b.Property<string>("parentProjectName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double>("penaltyRate");

                    b.Property<string>("projectCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("startPenaltyDay");

                    b.Property<short>("unitNoGroupLength");

                    b.Property<string>("webImage")
                        .HasMaxLength(300);

                    b.Property<short>("webSort");

                    b.HasKey("Id");

                    b.HasIndex("projectCode")
                        .IsUnique()
                        .HasName("projectCodeUnique");

                    b.ToTable("MS_Project");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_ProjectProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("productID");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_ProjectProduct");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("countryID");

                    b.Property<string>("townCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("townName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("countryID");

                    b.ToTable("MS_Town");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Facing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("facingCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("facingName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("facingCode")
                        .IsUnique()
                        .HasName("facingCodeUnique");

                    b.ToTable("LK_Facing");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool>("isOption");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("optionSort");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("itemCode")
                        .IsUnique()
                        .HasName("itemCodeUnique");

                    b.ToTable("LK_Item");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_RentalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("rentalStatusCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("rentalStatusName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("rentalStatusCode")
                        .IsUnique()
                        .HasName("rentalStatusCodeUnique");

                    b.ToTable("LK_RentalStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_UnitStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("unitStatusCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("unitStatusName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("unitStatusCode")
                        .IsUnique()
                        .HasName("unitStatusCodeUnique");

                    b.ToTable("LK_UnitStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("areaCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("cityID");

                    b.Property<int>("entityID");

                    b.Property<string>("regionName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("areaCode")
                        .IsUnique()
                        .HasName("areaCodeUnique");

                    b.HasIndex("cityID");

                    b.ToTable("MS_Area");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("areaField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("categoryCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("categoryField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("clusterField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("detailField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("entityID");

                    b.Property<string>("facingField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("kavNoField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("productField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("projectField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("roadField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("zoningField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("categoryCode")
                        .IsUnique()
                        .HasName("categoryCodeUnique");

                    b.ToTable("MS_Category");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("cityName")
                        .IsRequired();

                    b.Property<int>("countyID");

                    b.HasKey("Id");

                    b.HasIndex("countyID");

                    b.ToTable("MS_City");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Cluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("clusterCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("clusterName")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<DateTime?>("dueDateDevelopment");

                    b.Property<string>("dueDateRemarks")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("entityID");

                    b.Property<string>("gracePeriod")
                        .HasMaxLength(100);

                    b.Property<string>("handOverPeriod")
                        .HasMaxLength(100);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("clusterCode")
                        .IsUnique()
                        .HasName("clusterCodeUnique");

                    b.ToTable("MS_Cluster");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("countyName")
                        .IsRequired();

                    b.Property<int>("territoryID");

                    b.HasKey("Id");

                    b.HasIndex("territoryID");

                    b.ToTable("MS_County");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("detailCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("detailImage")
                        .HasMaxLength(200);

                    b.Property<string>("detailName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<int?>("isMultiple");

                    b.HasKey("Id");

                    b.ToTable("MS_Detail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Facade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("facadeCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("facadeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("facadeCode")
                        .IsUnique()
                        .HasName("facadeCodeUnique");

                    b.ToTable("MS_Facade");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("productCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("productCode")
                        .IsUnique()
                        .HasName("productCodeUnique");

                    b.ToTable("MS_Product");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("detail")
                        .HasMaxLength(300);

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.Property<string>("renovationCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("renovationName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("projectID");

                    b.ToTable("MS_Renovation");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Territory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("territoryName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MS_Territory");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CombinedUnitNo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("TokenNo");

                    b.Property<int>("areaID");

                    b.Property<int>("categoryID");

                    b.Property<int>("clusterID");

                    b.Property<int>("detailID");

                    b.Property<int>("entityID");

                    b.Property<int>("facingID");

                    b.Property<string>("prevUnitNo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("productID");

                    b.Property<int>("projectID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("rentalStatusID");

                    b.Property<int?>("termMainID");

                    b.Property<string>("unitCertCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int>("unitCodeID");

                    b.Property<string>("unitNo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("unitStatusID");

                    b.Property<int>("zoningID");

                    b.HasKey("Id");

                    b.HasIndex("areaID");

                    b.HasIndex("categoryID");

                    b.HasIndex("clusterID");

                    b.HasIndex("detailID");

                    b.HasIndex("facingID");

                    b.HasIndex("productID");

                    b.HasIndex("projectID");

                    b.HasIndex("rentalStatusID");

                    b.HasIndex("termMainID");

                    b.HasIndex("unitCodeID");

                    b.HasIndex("unitStatusID");

                    b.HasIndex("zoningID");

                    b.ToTable("MS_Unit");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("unitCode")
                        .HasMaxLength(20);

                    b.Property<string>("unitName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_UnitCode");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<double>("area");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("dimension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<int>("itemID");

                    b.Property<double>("pctDisc");

                    b.Property<double>("pctTax");

                    b.Property<int>("unitID");

                    b.HasKey("Id");

                    b.HasIndex("itemID");

                    b.HasIndex("unitID");

                    b.ToTable("MS_UnitItem");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("execMode")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("execTime");

                    b.Property<string>("execUN")
                        .HasMaxLength(50);

                    b.Property<decimal>("grossPrice")
                        .HasColumnType("money");

                    b.Property<int>("itemID");

                    b.Property<int>("renovID");

                    b.Property<int>("termID");

                    b.Property<int>("unitID");

                    b.HasKey("Id");

                    b.HasIndex("itemID");

                    b.HasIndex("renovID");

                    b.HasIndex("termID");

                    b.HasIndex("unitID");

                    b.ToTable("MS_UnitItemPrice");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bathroom")
                        .HasMaxLength(50);

                    b.Property<string>("bedroom")
                        .HasMaxLength(50);

                    b.Property<int>("unitItemID");

                    b.HasKey("Id");

                    b.HasIndex("unitItemID");

                    b.ToTable("MS_UnitRoom");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitTaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("dataUnit")
                        .IsRequired();

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("projectID");

                    b.ToTable("MS_UnitTaskList");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Zoning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("zoningCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("zoningName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("zoningCode")
                        .IsUnique()
                        .HasName("zoningCodeUnique");

                    b.ToTable("MS_Zoning");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PPOnline.LK_PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("paymentType");

                    b.Property<string>("paymentTypeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("sortNo");

                    b.HasKey("Id");

                    b.ToTable("LK_PaymentType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("keyFeaturesCollectionID");

                    b.Property<string>("projectDesc");

                    b.Property<string>("projectDeveloper")
                        .HasMaxLength(100);

                    b.Property<int>("projectID");

                    b.Property<string>("projectImageLogo")
                        .HasMaxLength(200);

                    b.Property<string>("projectMarketingOffice")
                        .HasMaxLength(500);

                    b.Property<string>("projectMarketingPhone")
                        .HasMaxLength(50);

                    b.Property<bool>("projectStatus");

                    b.Property<string>("projectWebsite")
                        .HasMaxLength(100);

                    b.Property<string>("sitePlansImageUrl")
                        .HasMaxLength(100);

                    b.Property<string>("sitePlansLegend")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("keyFeaturesCollectionID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_ProjectInfo");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectKeyFeaturesCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("MS_ProjectKeyFeaturesCollection");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<double>("latitude");

                    b.Property<string>("locationImageURL")
                        .HasMaxLength(100);

                    b.Property<double>("longitude");

                    b.Property<string>("projectAddress")
                        .HasMaxLength(500);

                    b.Property<int>("projectInfoID");

                    b.HasKey("Id");

                    b.HasIndex("projectInfoID");

                    b.ToTable("MS_ProjectLocation");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.TR_ProjectImageGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("imageAlt")
                        .HasMaxLength(500);

                    b.Property<bool>("imageStatus");

                    b.Property<string>("imageURL")
                        .HasMaxLength(100);

                    b.Property<int>("projectInfoID");

                    b.HasKey("Id");

                    b.HasIndex("projectInfoID");

                    b.ToTable("TR_ProjectImageGallery");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.TR_ProjectKeyFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("keyFeatures")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("keyFeaturesCollectionID");

                    b.Property<int>("status");

                    b.HasKey("Id");

                    b.HasIndex("keyFeaturesCollectionID");

                    b.ToTable("TR_ProjectKeyFeatures");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.LK_BookingOnlineStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("statusType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("statusTypeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LK_BookingOnlineStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.MS_DiscOnlineBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("batchPP")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<int?>("clusterID");

                    b.Property<string>("discDesc")
                        .HasMaxLength(200);

                    b.Property<float>("discPct");

                    b.Property<string>("nameLabel")
                        .HasMaxLength(300);

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("clusterID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_DiscOnlineBooking");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.SYS_BookingCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BASTNo");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bookNo");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.ToTable("SYS_BookingCounter");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_PaymentOnlineBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("UnitOrderHeaderID");

                    b.Property<string>("bankAccName")
                        .HasMaxLength(100);

                    b.Property<string>("bankAccNo")
                        .HasMaxLength(100);

                    b.Property<string>("bankName")
                        .HasMaxLength(100);

                    b.Property<string>("offlineType")
                        .HasMaxLength(100);

                    b.Property<decimal>("paymentAmt")
                        .HasColumnType("money");

                    b.Property<DateTime>("paymentDate");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("resiImage")
                        .HasMaxLength(300);

                    b.Property<string>("resiNo")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("UnitOrderHeaderID");

                    b.ToTable("TR_PaymentOnlineBook");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BFAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PPNo")
                        .HasMaxLength(6);

                    b.Property<int>("UnitOrderHeaderID");

                    b.Property<int?>("bookingHeaderID");

                    b.Property<double?>("disc1");

                    b.Property<double?>("disc2");

                    b.Property<string>("groupBU")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(300);

                    b.Property<int>("renovID");

                    b.Property<decimal>("sellingPrice")
                        .HasColumnType("money");

                    b.Property<string>("specialDiscType")
                        .HasMaxLength(100);

                    b.Property<int>("termID");

                    b.Property<int>("unitID");

                    b.HasKey("Id");

                    b.HasIndex("UnitOrderHeaderID");

                    b.HasIndex("bookingHeaderID");

                    b.HasIndex("renovID");

                    b.HasIndex("termID");

                    b.HasIndex("unitID");

                    b.ToTable("TR_UnitOrderDetail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitOrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("memberCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("memberName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("oldOrderCode")
                        .HasMaxLength(20);

                    b.Property<string>("orderCode")
                        .HasMaxLength(20);

                    b.Property<DateTime>("orderDate");

                    b.Property<int>("paymentTypeID");

                    b.Property<string>("psCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("psEmail")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("psName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("psPhone")
                        .HasMaxLength(200);

                    b.Property<string>("scmCode")
                        .HasMaxLength(3);

                    b.Property<int>("statusID");

                    b.Property<decimal>("totalAmt")
                        .HasColumnType("money");

                    b.Property<long>("userID");

                    b.HasKey("Id");

                    b.HasIndex("paymentTypeID");

                    b.HasIndex("statusID");

                    b.ToTable("TR_UnitOrderHeader");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitReserved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BFAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("money");

                    b.Property<double?>("disc1");

                    b.Property<double?>("disc2");

                    b.Property<string>("groupBU")
                        .HasMaxLength(100);

                    b.Property<string>("pscode")
                        .HasMaxLength(8);

                    b.Property<DateTime?>("releaseDate");

                    b.Property<string>("remarks")
                        .HasMaxLength(300);

                    b.Property<int>("renovID");

                    b.Property<DateTime>("reserveDate");

                    b.Property<string>("reservedBy")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("specialDiscType")
                        .HasMaxLength(100);

                    b.Property<int>("termID");

                    b.Property<int>("unitID");

                    b.HasKey("Id");

                    b.HasIndex("renovID");

                    b.HasIndex("termID");

                    b.HasIndex("unitID");

                    b.ToTable("TR_UnitReserved");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.LK_DPCalc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DPCalcDesc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("DPCalcType")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("LK_DPCalc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.LK_FinType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("finTimes");

                    b.Property<string>("finTypeCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("finTypeDesc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("isCashStd");

                    b.Property<bool>("isCommStd");

                    b.Property<string>("oldFinTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<double>("pctComm");

                    b.Property<double>("pctCommLC");

                    b.Property<double>("pctCommTB");

                    b.HasKey("Id");

                    b.HasIndex("finTypeCode")
                        .IsUnique()
                        .HasName("finTypeCodeUnique");

                    b.ToTable("LK_FinType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("discountCode")
                        .IsRequired();

                    b.Property<string>("discountName")
                        .IsRequired();

                    b.Property<bool>("isActive");

                    b.HasKey("Id");

                    b.ToTable("MS_Discount");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_FormulaCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("formula")
                        .HasMaxLength(100);

                    b.Property<int>("formulaCode");

                    b.Property<string>("formulaName")
                        .HasMaxLength(20);

                    b.Property<int>("formulaNo");

                    b.HasKey("Id");

                    b.HasIndex("formulaCode")
                        .IsUnique()
                        .HasName("formulaCodeUnique");

                    b.ToTable("MS_FormulaCode");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_GroupTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("GroupTermCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("GroupTermDesc")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.ToTable("MS_GroupTerm");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_MappingFormula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("categoryID");

                    b.Property<int>("formulaCodeID");

                    b.Property<int>("productID");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("categoryID");

                    b.HasIndex("formulaCodeID");

                    b.HasIndex("productID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_MappingFormula");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_PriceTaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("priceListFile")
                        .IsRequired();

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("projectID");

                    b.ToTable("MS_PriceTaskList");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DPCalcType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("GroupTermCode")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("PPJBDue");

                    b.Property<string>("discBFCalcType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("termCode")
                        .HasMaxLength(5);

                    b.Property<int?>("termInstallment");

                    b.Property<int>("termMainID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("projectID");

                    b.HasIndex("termMainID");

                    b.ToTable("MS_Term");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermAddDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("addDiscAmt");

                    b.Property<byte>("addDiscNo");

                    b.Property<double>("addDiscPct");

                    b.Property<int>("discountID");

                    b.Property<int>("entityID");

                    b.Property<int>("termID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("discountID");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermAddDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermDP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("DPAmount")
                        .HasColumnType("money");

                    b.Property<byte>("DPNo");

                    b.Property<double>("DPPct");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("daysDue");

                    b.Property<int?>("daysDueNewKP");

                    b.Property<int>("entityID");

                    b.Property<string>("termCode")
                        .HasMaxLength(5);

                    b.Property<int>("termID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermDP");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BFAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("famDiscCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("termCode")
                        .HasMaxLength(5);

                    b.Property<string>("termDesc")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("MS_TermMain");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermPmt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<short>("finStartDue");

                    b.Property<short?>("finStartM");

                    b.Property<int>("finTypeID");

                    b.Property<bool>("isSetting");

                    b.Property<int>("termID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("finTypeID");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermPmt");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.TR_BasePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("projectCode")
                        .HasMaxLength(5);

                    b.Property<string>("roadCode")
                        .HasMaxLength(20);

                    b.Property<double>("unitBasePrice");

                    b.Property<string>("unitCode")
                        .HasMaxLength(20);

                    b.Property<string>("unitNo")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("TR_BasePrice");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.LK_Alloc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayFor", "LK_PayFor")
                        .WithMany("LK_Alloc")
                        .HasForeignKey("payForID");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_DocTemplate", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_DocumentPS", "MS_DocumentPS")
                        .WithMany("MS_DocTemplate")
                        .HasForeignKey("docID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_KuasaDireksi", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_DocumentPS", "MS_DocumentPS")
                        .WithMany("MS_KuasaDireksi")
                        .HasForeignKey("docID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_KuasaDireksiPeople", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_KuasaDireksi", "MS_KuasaDireksi")
                        .WithMany("MS_KuasaDireksiPeople")
                        .HasForeignKey("kuasaDireksiID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_MappingTemplate", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_DocTemplate", "MS_DocTemplate")
                        .WithMany("MS_MappingTemplate")
                        .HasForeignKey("docTemplateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.MS_TermDiscOnlineBooking", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermDiscOnlineBooking")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_FinanceCounter", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", "MS_Account")
                        .WithMany("SYS_FinanceCounter")
                        .HasForeignKey("accID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_RolesOthersType", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_OthersType", "LK_OthersType")
                        .WithMany("SYS_RolesOthersType")
                        .HasForeignKey("othersTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_RolesPayFor", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayFor", "LK_PayFor")
                        .WithMany("SYS_RolesPayFor")
                        .HasForeignKey("payForID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.SYS_RolesPayType", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayType", "LK_PayType")
                        .WithMany("SYS_RolesPayType")
                        .HasForeignKey("payTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingCancel", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingCancel")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_Reason", "LK_Reason")
                        .WithMany("TR_BookingCancel")
                        .HasForeignKey("reasonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingChangeOwner", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingChangeOwner")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingCorres", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingCorres")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_Corres", "MS_Corres")
                        .WithMany("TR_BookingCorres")
                        .HasForeignKey("corresId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingDetail")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_BookingTrType", "LK_BookingTrType")
                        .WithMany("TR_BookingDetail")
                        .HasForeignKey("bookingTrTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany("TR_BookingDetail")
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailAddDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_BookingDetailAddDisc")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailAdjustment", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_BookingDetailAdjustment")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailDP", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_BookingDetailDP")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.LK_DPCalc", "LK_DpCalc")
                        .WithMany("TR_BookingDetailDP")
                        .HasForeignKey("dpCalcID");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailSchedule", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_Alloc", "LK_Alloc")
                        .WithMany("TR_BookingDetailSchedule")
                        .HasForeignKey("allocID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_BookingDetailSchedule")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetailScheduleOtorisasi", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_Alloc", "LK_Alloc")
                        .WithMany("TR_BookingDetailScheduleOtorisasi")
                        .HasForeignKey("allocID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_BookingDetailScheduleOtorisasi")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDocument", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingDocument")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_TransFrom", "MS_TransFrom")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("MS_TransFromId");

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_SADStatus", "LK_SADStatus")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("SADStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_SalesEvent", "MS_SalesEvent")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("eventID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Facade", "MS_Facade")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("facadeID");

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_Promotion", "LK_Promotion")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("promotionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_ShopBusiness", "MS_ShopBusiness")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("shopBusinessID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_SumberDana", "MS_SumberDana")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("sumberDanaID");

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_TujuanTransaksi", "MS_TujuanTransaksi")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("tujuanTransaksiID");

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", "MS_Unit")
                        .WithMany("TR_BookingHeader")
                        .HasForeignKey("unitID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeaderTerm", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingHeaderTerm")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("TR_BookingHeaderTerm")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingItemPrice", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingItemPrice")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany("TR_BookingItemPrice")
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("TR_BookingItemPrice")
                        .HasForeignKey("termID");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingSalesDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_BookingSalesDisc")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany("TR_BookingSalesDisc")
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingTax", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_BookingTax")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.MS_TaxType", "MS_TaxType")
                        .WithMany("TR_BookingTax")
                        .HasForeignKey("taxTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_CashAddDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_CashAddDisc")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_CommAddDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader")
                        .WithMany("TR_CommAddDisc")
                        .HasForeignKey("TR_BookingHeaderId");

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_CommAddDisc")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_DPHistory", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_DPHistory")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_MKTAddDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_MKTAddDisc")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentDetail", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account")
                        .WithMany("TR_PaymentDetail")
                        .HasForeignKey("MS_AccountId");

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayType", "LK_PayType")
                        .WithMany("TR_PaymentDetail")
                        .HasForeignKey("payTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentHeader", "TR_PaymentHeader")
                        .WithMany("TR_PaymentDetail")
                        .HasForeignKey("paymentHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentDetailAlloc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account")
                        .WithMany("TR_PaymentDetailAlloc")
                        .HasForeignKey("MS_AccountId");

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentDetail", "TR_PaymentDetail")
                        .WithMany("TR_PaymentDetailAlloc")
                        .HasForeignKey("paymentDetailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PaymentHeader", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", "MS_Account")
                        .WithMany("TR_PaymentHeader")
                        .HasForeignKey("accountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_PaymentHeader")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_PayFor", "LK_PayFor")
                        .WithMany("TR_PaymentHeader")
                        .HasForeignKey("payForID");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_PenaltySchedule", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_PenaltySchedule")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_ReminderLetter", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_ReminderLetter")
                        .HasForeignKey("bookingHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.LK_LetterStatus", "LK_LetterStatus")
                        .WithMany("TR_ReminderLetter")
                        .HasForeignKey("letterStatusID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.LippoMaster.TR_SSPDetail", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_SSPHeader", "TR_SSPHeader")
                        .WithMany("TR_SSPDetail")
                        .HasForeignKey("SSPHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", "MS_Account")
                        .WithMany("TR_SSPDetail")
                        .HasForeignKey("accountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingDetail", "TR_BookingDetail")
                        .WithMany("TR_SSPDetail")
                        .HasForeignKey("bookingDetailID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_BankBranch_JKB", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_JenisKantorBank", "MS_JenisKantorBank")
                        .WithMany("MP_BankBranch_JKB")
                        .HasForeignKey("JKBID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", "MS_BankBranch")
                        .WithMany("MP_BankBranch_JKB")
                        .HasForeignKey("bankBranchID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_CompanyProject", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", "MS_Company")
                        .WithMany("MP_CompanyProject")
                        .HasForeignKey("companyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MP_CompanyProject")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_OfficerProject", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Officer", "MS_Officer")
                        .WithMany("MP_OfficerProject")
                        .HasForeignKey("officerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MP_OfficerProject")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", "MS_BankBranch")
                        .WithMany("MS_Account")
                        .HasForeignKey("bankBranchID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", "MS_Bank")
                        .WithMany("MS_Account")
                        .HasForeignKey("bankID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", "MS_Company")
                        .WithMany("MS_Account")
                        .HasForeignKey("coID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Account")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_AccountEmail", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", "MS_Account")
                        .WithMany("MS_AccountEmail")
                        .HasForeignKey("accountID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.LK_BankLevel", "LK_BankLevel")
                        .WithMany("MS_Bank")
                        .HasForeignKey("bankTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.LK_BankLevel", "LK_BankLevel")
                        .WithMany("MS_BankBranch")
                        .HasForeignKey("bankBranchTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", "MS_Bank")
                        .WithMany("MS_BankBranch")
                        .HasForeignKey("bankID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_PostCode", "MS_PostCode")
                        .WithMany()
                        .HasForeignKey("postCodeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Officer", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Department", "MS_Department")
                        .WithMany("MS_Officer")
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Position", "MS_Position")
                        .WithMany("MS_Officer")
                        .HasForeignKey("positionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Position", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Department", "MS_Department")
                        .WithMany("MS_Position")
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_PostCode", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Town", "MS_Town")
                        .WithMany("MS_PostCode")
                        .HasForeignKey("townID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_ProjectProduct", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", "MS_Product")
                        .WithMany("MS_ProjectProduct")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_ProjectProduct")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Town", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Country", "MS_Country")
                        .WithMany("MS_Town")
                        .HasForeignKey("countryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Area", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_City", "MS_City")
                        .WithMany("MS_Area")
                        .HasForeignKey("cityID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_City", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_County", "MS_County")
                        .WithMany("MS_City")
                        .HasForeignKey("countyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_County", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Territory", "MS_Territory")
                        .WithMany("MS_County")
                        .HasForeignKey("territoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Renovation")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Area", "MS_Area")
                        .WithMany("MS_Unit")
                        .HasForeignKey("areaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Category", "MS_Category")
                        .WithMany("MS_Unit")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Cluster", "MS_Cluster")
                        .WithMany("MS_Unit")
                        .HasForeignKey("clusterID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Detail", "MS_Detail")
                        .WithMany("MS_Unit")
                        .HasForeignKey("detailID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Facing", "LK_Facing")
                        .WithMany("MS_Unit")
                        .HasForeignKey("facingID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", "MS_Product")
                        .WithMany("MS_Unit")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Unit")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_RentalStatus", "LK_RentalStatus")
                        .WithMany("MS_Unit")
                        .HasForeignKey("rentalStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_TermMain", "MS_TermMain")
                        .WithMany("MS_Unit")
                        .HasForeignKey("termMainID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitCode", "MS_UnitCode")
                        .WithMany("MS_Unit")
                        .HasForeignKey("unitCodeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_UnitStatus", "LK_UnitStatus")
                        .WithMany("MS_Unit")
                        .HasForeignKey("unitStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Zoning", "MS_Zoning")
                        .WithMany("MS_Unit")
                        .HasForeignKey("zoningID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItem", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany("MS_UnitItem")
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", "MS_Unit")
                        .WithMany("MS_UnitItem")
                        .HasForeignKey("unitID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItemPrice", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany()
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", "MS_Renovation")
                        .WithMany("MS_UnitItemPrice")
                        .HasForeignKey("renovID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_UnitItemPrice")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", "MS_Unit")
                        .WithMany("MS_UnitItemPrice")
                        .HasForeignKey("unitID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitRoom", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItem", "MS_UnitItem")
                        .WithMany("MS_UnitRoom")
                        .HasForeignKey("unitItemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitTaskList", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_UnitTaskList")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectInfo", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectKeyFeaturesCollection", "MS_ProjectKeyFeaturesCollection")
                        .WithMany("MS_ProjectInfo")
                        .HasForeignKey("keyFeaturesCollectionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_ProjectInfo")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectLocation", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectInfo", "MS_ProjectInfo")
                        .WithMany("MS_ProjectLocation")
                        .HasForeignKey("projectInfoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.TR_ProjectImageGallery", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectInfo", "MS_ProjectInfo")
                        .WithMany("TR_ProjectImageGallery")
                        .HasForeignKey("projectInfoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.TR_ProjectKeyFeatures", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.ProjectInfo.MS_ProjectKeyFeaturesCollection", "MS_ProjectKeyFeaturesCollection")
                        .WithMany("TR_ProjectKeyFeatures")
                        .HasForeignKey("keyFeaturesCollectionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.MS_DiscOnlineBooking", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Cluster", "MS_Cluster")
                        .WithMany()
                        .HasForeignKey("clusterID");

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany()
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_PaymentOnlineBook", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitOrderHeader", "TR_UnitOrderHeader")
                        .WithMany("TR_PaymentOnlineBook")
                        .HasForeignKey("UnitOrderHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitOrderDetail", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitOrderHeader", "TR_UnitOrderHeader")
                        .WithMany("TR_UnitOrderDetail")
                        .HasForeignKey("UnitOrderHeaderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.LippoMaster.TR_BookingHeader", "TR_BookingHeader")
                        .WithMany("TR_UnitOrderDetail")
                        .HasForeignKey("bookingHeaderID");

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", "MS_Renovation")
                        .WithMany("TR_UnitOrderDetail")
                        .HasForeignKey("renovID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("TR_UnitOrderDetail")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", "MS_Unit")
                        .WithMany("TR_UnitOrderDetail")
                        .HasForeignKey("unitID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitOrderHeader", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.PPOnline.LK_PaymentType", "LK_PaymentType")
                        .WithMany()
                        .HasForeignKey("paymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.LK_BookingOnlineStatus", "LK_BookingOnlineStatus")
                        .WithMany()
                        .HasForeignKey("statusID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.OnlineBooking.PropertySystem.TR_UnitReserved", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", "MS_Renovation")
                        .WithMany("TR_UnitReserved")
                        .HasForeignKey("renovID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("TR_UnitReserved")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", "MS_Unit")
                        .WithMany("TR_UnitReserved")
                        .HasForeignKey("unitID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_MappingFormula", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Category", "MS_Category")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_FormulaCode", "MS_FormulaCode")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("formulaCodeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", "MS_Product")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_PriceTaskList", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_PriceTaskList")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_Term", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Term")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_TermMain", "MS_TermMain")
                        .WithMany("MS_Term")
                        .HasForeignKey("termMainID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermAddDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Discount", "MS_Discount")
                        .WithMany("MS_TermAddDisc")
                        .HasForeignKey("discountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermAddDisc")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermDP", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermDP")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermPmt", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.LK_FinType", "LK_FinType")
                        .WithMany("MS_TermPmt")
                        .HasForeignKey("finTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermPmt")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
