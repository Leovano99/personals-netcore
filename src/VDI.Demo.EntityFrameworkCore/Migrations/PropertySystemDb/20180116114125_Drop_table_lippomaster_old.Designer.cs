// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VDI.Demo.EntityFrameworkCore;

namespace VDI.Demo.Migrations.PropertySystemDb
{
    [DbContext(typeof(PropertySystemDbContext))]
    [Migration("20180116114125_Drop_table_lippomaster_old")]
    partial class Drop_table_lippomaster_old
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.LK_BankLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("bankLevelCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("bankLevelName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("isBankBranchType");

                    b.Property<bool>("isBankType");

                    b.HasKey("Id");

                    b.HasIndex("bankLevelCode")
                        .IsUnique()
                        .HasName("bankLevelCodeUnique");

                    b.ToTable("LK_BankLevel");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_BankBranch_JKB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("JKBID");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("bankBranchID");

                    b.HasKey("Id");

                    b.HasIndex("JKBID");

                    b.HasIndex("bankBranchID");

                    b.ToTable("MP_BankBranch_JKB");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_CompanyProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("companyID");

                    b.Property<bool>("mainStatus");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("companyID");

                    b.HasIndex("projectID");

                    b.ToTable("MP_CompanyProject");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_OfficerProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("email");

                    b.Property<int>("officerID");

                    b.Property<string>("phoneNo");

                    b.Property<int>("projectID");

                    b.Property<string>("whatsappNo");

                    b.HasKey("Id");

                    b.HasIndex("officerID");

                    b.HasIndex("projectID");

                    b.ToTable("MP_OfficerProject");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NATURE_ACCOUNT_BANK")
                        .HasMaxLength(10);

                    b.Property<string>("NATURE_ACCOUNT_DEP")
                        .HasMaxLength(10);

                    b.Property<string>("ORG_ID")
                        .HasMaxLength(5);

                    b.Property<string>("PROVINCE_ID")
                        .HasMaxLength(2);

                    b.Property<string>("accCode")
                        .HasMaxLength(5);

                    b.Property<string>("accName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("accNo")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("bankBranchID");

                    b.Property<int>("bankID");

                    b.Property<int>("coID");

                    b.Property<string>("devCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("accCode")
                        .IsUnique()
                        .HasName("accCodeUnique")
                        .HasFilter("[accCode] IS NOT NULL");

                    b.HasIndex("bankBranchID");

                    b.HasIndex("bankID");

                    b.HasIndex("coID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_Account");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("SWIFTCode")
                        .HasMaxLength(11);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("att")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("bankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("bankTermId");

                    b.Property<int>("bankTypeID");

                    b.Property<string>("deputyName1")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("deputyName2")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<bool>("divertToRO");

                    b.Property<int>("entityID");

                    b.Property<string>("fax")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("groupBankCode")
                        .HasMaxLength(20);

                    b.Property<string>("headName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("isActive");

                    b.Property<string>("parentBankCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("relationOfficerEmail")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("bankCode")
                        .IsUnique()
                        .HasName("bankCodeUnique");

                    b.HasIndex("bankTypeID");

                    b.ToTable("MS_Bank");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PICName")
                        .HasMaxLength(50);

                    b.Property<string>("PICPosition")
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("bankBranchName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankBranchType");

                    b.Property<int>("bankBranchTypeID");

                    b.Property<int>("bankID");

                    b.Property<string>("bankRekNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("clusterCode")
                        .HasMaxLength(5);

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<string>("phone")
                        .HasMaxLength(20);

                    b.Property<string>("projectCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("bankBranchCode")
                        .IsUnique()
                        .HasName("bankBranchCodeUnique");

                    b.HasIndex("bankBranchTypeID");

                    b.HasIndex("bankID");

                    b.ToTable("MS_BankBranch");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("APLogin")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("APServer")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("APcoCode")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("KPP_Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KPP_TTD")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NPWP")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("NPWPAddress")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("ORG_ID")
                        .HasMaxLength(5);

                    b.Property<string>("PKP")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("PKPDate");

                    b.Property<string>("PPATK_PBJ_code")
                        .HasMaxLength(10);

                    b.Property<string>("accountNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("bankBranch")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("centerManager")
                        .HasMaxLength(50);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("coCodeParent")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("coName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("companyEmail");

                    b.Property<string>("country");

                    b.Property<int>("entityID");

                    b.Property<string>("faxNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("image");

                    b.Property<bool>("isActive");

                    b.Property<bool>("isCA");

                    b.Property<string>("leasingManager")
                        .HasMaxLength(50);

                    b.Property<string>("mailAddress")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("phoneNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("postCodeID");

                    b.Property<string>("website")
                        .HasMaxLength(100);

                    b.Property<string>("workHour")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("coCode")
                        .IsUnique()
                        .HasName("coCodeUnique");

                    b.HasIndex("postCodeID");

                    b.ToTable("MS_Company");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("countryCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("countryCode")
                        .IsUnique()
                        .HasName("countryCodeUnique");

                    b.ToTable("MS_Country");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("departmentCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("departmentEmail");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("departmentWhatsapp")
                        .HasMaxLength(20);

                    b.Property<bool>("isActive");

                    b.HasKey("Id");

                    b.HasIndex("departmentCode")
                        .IsUnique()
                        .HasName("departmentCodeUnique");

                    b.ToTable("MS_Department");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("entityCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("entityName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("entityCode")
                        .IsUnique()
                        .HasName("entityCodeUnique");

                    b.ToTable("MS_Entity");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_JenisKantorBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("JKBCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("JKBName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.HasIndex("JKBCode")
                        .IsUnique()
                        .HasName("JKBCodeUnique");

                    b.ToTable("MS_JenisKantorBank");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Officer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("departmentID");

                    b.Property<bool>("isActive");

                    b.Property<string>("officerEmail")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("officerName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("officerPhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("positionID");

                    b.HasKey("Id");

                    b.HasIndex("departmentID");

                    b.HasIndex("positionID");

                    b.ToTable("MS_Officer");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("departmentID");

                    b.Property<bool>("isActive");

                    b.Property<string>("positionCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("positionName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.HasIndex("departmentID");

                    b.ToTable("MS_Position");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_PostCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("postCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("province")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("regency")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("townID");

                    b.Property<string>("village")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("townID");

                    b.ToTable("MS_PostCode");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BIZ_UNIT_ID")
                        .HasMaxLength(2);

                    b.Property<string>("BusinessGroup")
                        .HasMaxLength(5);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DIV_ID")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("DMT_ProjectGroupCode");

                    b.Property<string>("DMT_ProjectGroupName");

                    b.Property<string>("FinanceContact")
                        .HasMaxLength(200);

                    b.Property<string>("FinanceEmail")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ORG_ID")
                        .HasMaxLength(5);

                    b.Property<string>("OperationalGroup")
                        .HasMaxLength(5);

                    b.Property<string>("PGContact")
                        .HasMaxLength(500);

                    b.Property<string>("PGEmail")
                        .HasMaxLength(200);

                    b.Property<int?>("PGManagerID");

                    b.Property<string>("PGPhone")
                        .HasMaxLength(100);

                    b.Property<int?>("PGStaffID");

                    b.Property<string>("PROJECT_ID")
                        .HasMaxLength(3);

                    b.Property<string>("SADBM")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int?>("SADBMID");

                    b.Property<string>("SADContact")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("SADEmail")
                        .HasMaxLength(200);

                    b.Property<string>("SADFax")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SADManager")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("SADManagerID");

                    b.Property<string>("SADPhone")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SADStaff")
                        .IsRequired()
                        .HasMaxLength(550);

                    b.Property<int?>("SADStaffID");

                    b.Property<string>("TaxGroup")
                        .HasMaxLength(200);

                    b.Property<int?>("bankRelationManagerID");

                    b.Property<int?>("bankRelationStaffID");

                    b.Property<int?>("callCenterManagerID");

                    b.Property<int?>("callCenterStaffID");

                    b.Property<int>("entityID");

                    b.Property<int?>("financeManagerID");

                    b.Property<int?>("financeStaffID");

                    b.Property<string>("image")
                        .HasMaxLength(300);

                    b.Property<bool>("isBookingCashier");

                    b.Property<bool>("isBookingSMS");

                    b.Property<bool>("isConfirmSP");

                    b.Property<bool>("isDMT");

                    b.Property<bool>("isPublish");

                    b.Property<string>("parentProjectName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double>("penaltyRate");

                    b.Property<string>("projectCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("startPenaltyDay");

                    b.Property<short>("unitNoGroupLength");

                    b.Property<string>("webImage")
                        .HasMaxLength(300);

                    b.Property<short>("webSort");

                    b.HasKey("Id");

                    b.HasIndex("projectCode")
                        .IsUnique()
                        .HasName("projectCodeUnique");

                    b.ToTable("MS_Project");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_ProjectProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("productID");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_ProjectProduct");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("countryID");

                    b.Property<string>("townCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("townName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("countryID");

                    b.ToTable("MS_Town");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Facing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("facingCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("facingName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("facingCode")
                        .IsUnique()
                        .HasName("facingCodeUnique");

                    b.ToTable("LK_Facing");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool>("isOption");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("optionSort");

                    b.Property<string>("shortName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("itemCode")
                        .IsUnique()
                        .HasName("itemCodeUnique");

                    b.ToTable("LK_Item");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_RentalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("rentalStatusCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("rentalStatusName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("rentalStatusCode")
                        .IsUnique()
                        .HasName("rentalStatusCodeUnique");

                    b.ToTable("LK_RentalStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_UnitStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("unitStatusCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("unitStatusName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("unitStatusCode")
                        .IsUnique()
                        .HasName("unitStatusCodeUnique");

                    b.ToTable("LK_UnitStatus");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("areaCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("cityID");

                    b.Property<int>("entityID");

                    b.Property<string>("regionName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("areaCode")
                        .IsUnique()
                        .HasName("areaCodeUnique");

                    b.HasIndex("cityID");

                    b.ToTable("MS_Area");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("areaField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("categoryCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("categoryField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("clusterField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("detailField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("entityID");

                    b.Property<string>("facingField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("kavNoField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("productField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("projectField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("roadField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("zoningField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("categoryCode")
                        .IsUnique()
                        .HasName("categoryCodeUnique");

                    b.ToTable("MS_Category");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("cityName")
                        .IsRequired();

                    b.Property<int>("countyID");

                    b.HasKey("Id");

                    b.HasIndex("countyID");

                    b.ToTable("MS_City");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Cluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("clusterCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("clusterName")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<DateTime?>("dueDateDevelopment");

                    b.Property<string>("dueDateRemarks")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("entityID");

                    b.Property<string>("gracePeriod")
                        .HasMaxLength(100);

                    b.Property<string>("handOverPeriod")
                        .HasMaxLength(100);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("clusterCode")
                        .IsUnique()
                        .HasName("clusterCodeUnique");

                    b.ToTable("MS_Cluster");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("countyName")
                        .IsRequired();

                    b.Property<int>("territoryID");

                    b.HasKey("Id");

                    b.HasIndex("territoryID");

                    b.ToTable("MS_County");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("detailCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("detailName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<int?>("isMultiple");

                    b.HasKey("Id");

                    b.ToTable("MS_Detail");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Facade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("facadeCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("facadeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("facadeCode")
                        .IsUnique()
                        .HasName("facadeCodeUnique");

                    b.ToTable("MS_Facade");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("productCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("sortNo");

                    b.HasKey("Id");

                    b.HasIndex("productCode")
                        .IsUnique()
                        .HasName("productCodeUnique");

                    b.ToTable("MS_Product");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("detail")
                        .HasMaxLength(300);

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.Property<string>("renovationCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("renovationName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("projectID");

                    b.HasIndex("renovationCode")
                        .IsUnique()
                        .HasName("renovationCodeUnique");

                    b.ToTable("MS_Renovation");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Territory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("territoryName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MS_Territory");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CombinedUnitNo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("TokenNo");

                    b.Property<int>("areaID");

                    b.Property<int>("categoryID");

                    b.Property<int>("clusterID");

                    b.Property<int>("detailID");

                    b.Property<int>("entityID");

                    b.Property<int>("facingID");

                    b.Property<string>("prevUnitNo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("productID");

                    b.Property<int>("projectID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("rentalStatusID");

                    b.Property<string>("unitCertCode")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int>("unitCodeID");

                    b.Property<string>("unitNo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("unitStatusID");

                    b.Property<int>("zoningID");

                    b.HasKey("Id");

                    b.HasIndex("areaID");

                    b.HasIndex("categoryID");

                    b.HasIndex("clusterID");

                    b.HasIndex("detailID");

                    b.HasIndex("facingID");

                    b.HasIndex("productID");

                    b.HasIndex("projectID");

                    b.HasIndex("rentalStatusID");

                    b.HasIndex("unitCodeID");

                    b.HasIndex("unitStatusID");

                    b.HasIndex("zoningID");

                    b.ToTable("MS_Unit");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("unitCode")
                        .HasMaxLength(20);

                    b.Property<string>("unitName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MS_UnitCode");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("amount")
                        .HasColumnType("money");

                    b.Property<double>("area");

                    b.Property<string>("coCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("dimension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("entityID");

                    b.Property<int>("itemID");

                    b.Property<int?>("jumlahKamarMandi");

                    b.Property<int?>("jumlahKamarTidur");

                    b.Property<double>("pctDisc");

                    b.Property<double>("pctTax");

                    b.Property<int>("unitID");

                    b.HasKey("Id");

                    b.HasIndex("itemID");

                    b.HasIndex("unitID");

                    b.ToTable("MS_UnitItem");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("execMode")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("execTime");

                    b.Property<string>("execUN")
                        .HasMaxLength(50);

                    b.Property<decimal>("grossPrice")
                        .HasColumnType("money");

                    b.Property<int>("itemID");

                    b.Property<int>("renovID");

                    b.Property<short>("termNo");

                    b.Property<int>("unitCodeID");

                    b.Property<string>("unitNo")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("itemID");

                    b.HasIndex("unitCodeID");

                    b.ToTable("MS_UnitItemPrice");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Zoning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("zoningCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("zoningName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("zoningCode")
                        .IsUnique()
                        .HasName("zoningCodeUnique");

                    b.ToTable("MS_Zoning");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.LK_DPCalc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DPCalcDesc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("DPCalcType")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.HasKey("Id");

                    b.ToTable("LK_DPCalc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.LK_FinType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("finTimes");

                    b.Property<string>("finTypeCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("finTypeDesc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("isCashStd");

                    b.Property<bool>("isCommStd");

                    b.Property<string>("oldFinTypeCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<double>("pctComm");

                    b.Property<double>("pctCommLC");

                    b.Property<double>("pctCommTB");

                    b.HasKey("Id");

                    b.HasIndex("finTypeCode")
                        .IsUnique()
                        .HasName("finTypeCodeUnique");

                    b.ToTable("LK_FinType");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("discountCode")
                        .IsRequired();

                    b.Property<string>("discountName")
                        .IsRequired();

                    b.Property<bool>("isActive");

                    b.HasKey("Id");

                    b.ToTable("MS_Discount");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_FormulaCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("formula")
                        .HasMaxLength(100);

                    b.Property<int>("formulaCode");

                    b.Property<string>("formulaName")
                        .HasMaxLength(20);

                    b.Property<int>("formulaNo");

                    b.HasKey("Id");

                    b.HasIndex("formulaCode")
                        .IsUnique()
                        .HasName("formulaCodeUnique");

                    b.ToTable("MS_FormulaCode");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_GroupTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("GroupTermCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("GroupTermDesc")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.HasKey("Id");

                    b.ToTable("MS_GroupTerm");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_MappingFormula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("categoryID");

                    b.Property<int>("formulaCodeID");

                    b.Property<int>("productID");

                    b.Property<int>("projectID");

                    b.HasKey("Id");

                    b.HasIndex("categoryID");

                    b.HasIndex("formulaCodeID");

                    b.HasIndex("productID");

                    b.HasIndex("projectID");

                    b.ToTable("MS_MappingFormula");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DPCalcType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("GroupTermCode")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("PPJBDue");

                    b.Property<string>("discBFCalcType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int>("entityID");

                    b.Property<bool>("isActive");

                    b.Property<int>("projectID");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("termCode")
                        .HasMaxLength(5);

                    b.Property<int?>("termInstallment");

                    b.Property<int>("termMainID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("projectID");

                    b.HasIndex("termMainID");

                    b.ToTable("MS_Term");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermAddDisc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("addDiscAmt");

                    b.Property<short>("addDiscNo");

                    b.Property<double>("addDiscPct");

                    b.Property<int>("discountID");

                    b.Property<int>("entityID");

                    b.Property<int>("termID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("discountID");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermAddDisc");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermDP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("DPAmount")
                        .HasColumnType("money");

                    b.Property<short>("DPNo");

                    b.Property<double>("DPPct");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<short>("daysDue");

                    b.Property<int?>("daysDueNewKP");

                    b.Property<int>("entityID");

                    b.Property<string>("termCode")
                        .HasMaxLength(5);

                    b.Property<int>("termID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermDP");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BFAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<string>("famDiscCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("termCode")
                        .HasMaxLength(5);

                    b.Property<string>("termDesc")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("MS_TermMain");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermPmt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("entityID");

                    b.Property<short>("finStartDue");

                    b.Property<int>("finTypeID");

                    b.Property<int>("termID");

                    b.Property<short>("termNo");

                    b.HasKey("Id");

                    b.HasIndex("finTypeID");

                    b.HasIndex("termID");

                    b.ToTable("MS_TermPmt");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.TR_BasePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("projectCode")
                        .HasMaxLength(5);

                    b.Property<string>("roadCode")
                        .HasMaxLength(20);

                    b.Property<double>("unitBasePrice");

                    b.Property<string>("unitCode")
                        .HasMaxLength(20);

                    b.Property<string>("unitNo")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("TR_BasePrice");
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_BankBranch_JKB", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_JenisKantorBank", "MS_JenisKantorBank")
                        .WithMany("MP_BankBranch_JKB")
                        .HasForeignKey("JKBID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", "MS_BankBranch")
                        .WithMany("MP_BankBranch_JKB")
                        .HasForeignKey("bankBranchID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_CompanyProject", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", "MS_Company")
                        .WithMany("MP_CompanyProject")
                        .HasForeignKey("companyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MP_CompanyProject")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MP_OfficerProject", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Officer", "MS_Officer")
                        .WithMany("MP_OfficerProject")
                        .HasForeignKey("officerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MP_OfficerProject")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Account", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", "MS_BankBranch")
                        .WithMany("MS_Account")
                        .HasForeignKey("bankBranchID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", "MS_Bank")
                        .WithMany("MS_Account")
                        .HasForeignKey("bankID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", "MS_Company")
                        .WithMany("MS_Account")
                        .HasForeignKey("coID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Account")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.LK_BankLevel", "LK_BankLevel")
                        .WithMany("MS_Bank")
                        .HasForeignKey("bankTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_BankBranch", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.LK_BankLevel", "LK_BankLevel")
                        .WithMany("MS_BankBranch")
                        .HasForeignKey("bankBranchTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Bank", "MS_Bank")
                        .WithMany("MS_BankBranch")
                        .HasForeignKey("bankID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Company", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_PostCode", "MS_PostCode")
                        .WithMany()
                        .HasForeignKey("postCodeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Officer", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Department", "MS_Department")
                        .WithMany("MS_Officer")
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Position", "MS_Position")
                        .WithMany("MS_Officer")
                        .HasForeignKey("positionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Position", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Department", "MS_Department")
                        .WithMany("MS_Position")
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_PostCode", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Town", "MS_Town")
                        .WithMany("MS_PostCode")
                        .HasForeignKey("townID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_ProjectProduct", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", "MS_Product")
                        .WithMany("MS_ProjectProduct")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_ProjectProduct")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Town", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Country", "MS_Country")
                        .WithMany("MS_Town")
                        .HasForeignKey("countryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Area", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_City", "MS_City")
                        .WithMany("MS_Area")
                        .HasForeignKey("cityID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_City", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_County", "MS_County")
                        .WithMany("MS_City")
                        .HasForeignKey("countyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_County", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Territory", "MS_Territory")
                        .WithMany("MS_County")
                        .HasForeignKey("territoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Renovation", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Renovation")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Area", "MS_Area")
                        .WithMany("MS_Unit")
                        .HasForeignKey("areaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Category", "MS_Category")
                        .WithMany("MS_Unit")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Cluster", "MS_Cluster")
                        .WithMany("MS_Unit")
                        .HasForeignKey("clusterID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Detail", "MS_Detail")
                        .WithMany("MS_Unit")
                        .HasForeignKey("detailID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Facing", "LK_Facing")
                        .WithMany("MS_Unit")
                        .HasForeignKey("facingID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", "MS_Product")
                        .WithMany("MS_Unit")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Unit")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_RentalStatus", "LK_RentalStatus")
                        .WithMany("MS_Unit")
                        .HasForeignKey("rentalStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitCode", "MS_UnitCode")
                        .WithMany("MS_Unit")
                        .HasForeignKey("unitCodeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_UnitStatus", "LK_UnitStatus")
                        .WithMany("MS_Unit")
                        .HasForeignKey("unitStatusID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Zoning", "MS_Zoning")
                        .WithMany("MS_Unit")
                        .HasForeignKey("zoningID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItem", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany("MS_UnitItem")
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Unit", "MS_Unit")
                        .WithMany("MS_UnitItem")
                        .HasForeignKey("unitID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitItemPrice", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.LK_Item", "LK_Item")
                        .WithMany()
                        .HasForeignKey("itemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_UnitCode", "MS_UnitCode")
                        .WithMany()
                        .HasForeignKey("unitCodeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_MappingFormula", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Category", "MS_Category")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_FormulaCode", "MS_FormulaCode")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("formulaCodeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Unit.MS_Product", "MS_Product")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_MappingFormula")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_Term", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.MasterPlan.Project.MS_Project", "MS_Project")
                        .WithMany("MS_Term")
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_TermMain", "MS_TermMain")
                        .WithMany("MS_Term")
                        .HasForeignKey("termMainID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermAddDisc", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Discount", "MS_Discount")
                        .WithMany("MS_TermAddDisc")
                        .HasForeignKey("discountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermAddDisc")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermDP", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermDP")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VDI.Demo.PropertySystemDB.Pricing.MS_TermPmt", b =>
                {
                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.LK_FinType", "LK_FinType")
                        .WithMany("MS_TermPmt")
                        .HasForeignKey("finTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VDI.Demo.PropertySystemDB.Pricing.MS_Term", "MS_Term")
                        .WithMany("MS_TermPmt")
                        .HasForeignKey("termID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
